# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foldLeftAcc
# Parameters: (size = 10)

# Run progress: 0.00% complete, ETA 00:52:30
# Fork: 1 of 2
# Warmup Iteration   1: 3010203.192 ops/s
# Warmup Iteration   2: 90887240.352 ops/s
# Warmup Iteration   3: 127215447.845 ops/s
# Warmup Iteration   4: 124177796.928 ops/s
# Warmup Iteration   5: 119835523.903 ops/s
Iteration   1: 126770560.017 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 127529671.140 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 128651643.831 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 127428907.738 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 126389902.655 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 126469373.362 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 115687541.491 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 127431144.664 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 127355361.385 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 126879117.104 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 1.11% complete, ETA 01:07:29
# Fork: 2 of 2
# Warmup Iteration   1: 1608191.101 ops/s
# Warmup Iteration   2: 114506230.359 ops/s
# Warmup Iteration   3: 126509101.581 ops/s
# Warmup Iteration   4: 127440383.207 ops/s
# Warmup Iteration   5: 126036413.067 ops/s
Iteration   1: 127681390.492 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 127737215.864 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 127715735.466 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 126632800.949 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 127378801.620 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 126397063.705 ops/s
                 ·gc.alloc.rate:      0.015 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 127415019.250 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 127614740.589 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 127596956.064 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 127300920.294 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foldLeftAcc":
  126703193.384 ±(99.9%) 2302582.479 ops/s [Average]
  (min, avg, max) = (115687541.491, 126703193.384, 128651643.831), stdev = 2651657.407
  CI (99.9%): [124400610.905, 129005775.863] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.001 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.015), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foldLeftAcc
# Parameters: (size = 100)

# Run progress: 2.22% complete, ETA 01:05:56
# Fork: 1 of 2
# Warmup Iteration   1: 141113.303 ops/s
# Warmup Iteration   2: 15428465.387 ops/s
# Warmup Iteration   3: 19382414.313 ops/s
# Warmup Iteration   4: 19294899.825 ops/s
# Warmup Iteration   5: 19441476.969 ops/s
Iteration   1: 19447286.527 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 19476175.319 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 19474510.641 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 19458417.580 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 19391615.254 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 19460941.831 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 19435354.429 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 19469875.432 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 19427374.075 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 19351344.944 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.33% complete, ETA 01:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 354566.872 ops/s
# Warmup Iteration   2: 16634501.709 ops/s
# Warmup Iteration   3: 19465528.465 ops/s
# Warmup Iteration   4: 19350318.036 ops/s
# Warmup Iteration   5: 19281843.669 ops/s
Iteration   1: 19371591.391 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 19270680.211 ops/s
                 ·gc.alloc.rate:      0.204 MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 19443246.145 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 19462482.124 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 19487505.212 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 19417425.772 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 19473442.544 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 19471209.485 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 19443544.261 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 19422955.713 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foldLeftAcc":
  19432848.944 ±(99.9%) 45693.073 ops/s [Average]
  (min, avg, max) = (19270680.211, 19432848.944, 19487505.212), stdev = 52620.211
  CI (99.9%): [19387155.872, 19478542.017] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.010 ±(99.9%) 0.040 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.010, 0.204), stdev = 0.046
  CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.013), stdev = 0.003
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foldLeftAcc
# Parameters: (size = 500)

# Run progress: 4.44% complete, ETA 01:04:06
# Fork: 1 of 2
# Warmup Iteration   1: 28140.993 ops/s
# Warmup Iteration   2: 3747288.301 ops/s
# Warmup Iteration   3: 4725218.082 ops/s
# Warmup Iteration   4: 4890768.625 ops/s
# Warmup Iteration   5: 4884304.253 ops/s
Iteration   1: 4895572.407 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4884867.504 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 4890900.251 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 4834670.298 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 4899532.474 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4873067.982 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4895632.004 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 4902169.905 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 4858890.140 ops/s
                 ·gc.alloc.rate:      3.917 MB/sec
                 ·gc.alloc.rate.norm: 0.986 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 4893160.689 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 5.56% complete, ETA 01:03:18
# Fork: 2 of 2
# Warmup Iteration   1: 452078.230 ops/s
# Warmup Iteration   2: 4290523.385 ops/s
# Warmup Iteration   3: 4880717.280 ops/s
# Warmup Iteration   4: 4888782.041 ops/s
# Warmup Iteration   5: 4886778.716 ops/s
Iteration   1: 4892609.650 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4894119.219 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 4897261.793 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 4894796.513 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 4893569.645 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4841890.684 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4894793.233 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 4897961.895 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 4901458.650 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 4865413.869 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foldLeftAcc":
  4885116.940 ±(99.9%) 17168.094 ops/s [Average]
  (min, avg, max) = (4834670.298, 4885116.940, 4902169.905), stdev = 19770.803
  CI (99.9%): [4867948.846, 4902285.034] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.196 ±(99.9%) 0.761 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.196, 3.917), stdev = 0.876
  CI (99.9%): [≈ 0, 0.957] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.049 ±(99.9%) 0.192 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.049, 0.986), stdev = 0.221
  CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foreachAcc
# Parameters: (size = 10)

# Run progress: 6.67% complete, ETA 01:02:33
# Fork: 1 of 2
# Warmup Iteration   1: 3622169.830 ops/s
# Warmup Iteration   2: 91930143.120 ops/s
# Warmup Iteration   3: 127532491.599 ops/s
# Warmup Iteration   4: 126250391.951 ops/s
# Warmup Iteration   5: 126881206.261 ops/s
Iteration   1: 127568302.895 ops/s
                 ·gc.alloc.rate:      0.288 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 127584583.484 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 127508972.172 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 127612417.458 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 126931812.754 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 127471639.238 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 127689912.221 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 127529694.511 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 127025033.207 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 126841803.232 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 7.78% complete, ETA 01:01:46
# Fork: 2 of 2
# Warmup Iteration   1: 2612240.571 ops/s
# Warmup Iteration   2: 82746266.981 ops/s
# Warmup Iteration   3: 127507231.011 ops/s
# Warmup Iteration   4: 127499694.752 ops/s
# Warmup Iteration   5: 127645353.151 ops/s
Iteration   1: 127434430.242 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 124855548.291 ops/s
                 ·gc.alloc.rate:      7.460 MB/sec
                 ·gc.alloc.rate.norm: 0.073 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 127519605.623 ops/s
                 ·gc.alloc.rate:      0.132 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 127575969.237 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 127631134.520 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 127451118.652 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 127377088.447 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 127619577.525 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 127802479.438 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 127458636.306 ops/s
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foreachAcc":
  127324487.973 ±(99.9%) 548242.937 ops/s [Average]
  (min, avg, max) = (124855548.291, 127324487.973, 127802479.438), stdev = 631357.382
  CI (99.9%): [126776245.036, 127872730.910] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.397 ±(99.9%) 1.445 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.397, 7.460), stdev = 1.664
  CI (99.9%): [≈ 0, 1.842] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.004 ±(99.9%) 0.014 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.004, 0.073), stdev = 0.016
  CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foreachAcc
# Parameters: (size = 100)

# Run progress: 8.89% complete, ETA 01:01:00
# Fork: 1 of 2
# Warmup Iteration   1: 223281.940 ops/s
# Warmup Iteration   2: 14967737.773 ops/s
# Warmup Iteration   3: 19424546.343 ops/s
# Warmup Iteration   4: 19434543.219 ops/s
# Warmup Iteration   5: 18580741.041 ops/s
Iteration   1: 19447116.226 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 19386714.981 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 19470479.315 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 19449653.092 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 19473852.528 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 19309986.697 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 19410441.041 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 19392788.647 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 19447383.454 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 19446141.824 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 10.00% complete, ETA 01:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 219197.982 ops/s
# Warmup Iteration   2: 14734423.230 ops/s
# Warmup Iteration   3: 19422392.030 ops/s
# Warmup Iteration   4: 19406847.205 ops/s
# Warmup Iteration   5: 18182034.061 ops/s
Iteration   1: 19435626.573 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 19464418.721 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 19244577.742 ops/s
                 ·gc.alloc.rate:      4.155 MB/sec
                 ·gc.alloc.rate.norm: 0.265 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 19452762.629 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 19438846.226 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 19443217.980 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 19476832.929 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 19430840.882 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 19445828.480 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 19460626.547 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foreachAcc":
  19426406.826 ±(99.9%) 49740.144 ops/s [Average]
  (min, avg, max) = (19244577.742, 19426406.826, 19476832.929), stdev = 57280.823
  CI (99.9%): [19376666.682, 19476146.969] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.208 ±(99.9%) 0.807 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.208, 4.155), stdev = 0.929
  CI (99.9%): [≈ 0, 1.015] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.013 ±(99.9%) 0.051 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.013, 0.265), stdev = 0.059
  CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.foreachAcc
# Parameters: (size = 500)

# Run progress: 11.11% complete, ETA 00:59:29
# Fork: 1 of 2
# Warmup Iteration   1: 321812.456 ops/s
# Warmup Iteration   2: 3786815.967 ops/s
# Warmup Iteration   3: 4806396.618 ops/s
# Warmup Iteration   4: 4893916.811 ops/s
# Warmup Iteration   5: 4874999.559 ops/s
Iteration   1: 4902709.263 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4895660.707 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 4907886.241 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 4904413.499 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 4902868.372 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4843395.748 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4889933.210 ops/s
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 4895496.099 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 4895848.183 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 4907175.493 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.22% complete, ETA 00:58:45
# Fork: 2 of 2
# Warmup Iteration   1: 41354.297 ops/s
# Warmup Iteration   2: 4134036.946 ops/s
# Warmup Iteration   3: 4479278.643 ops/s
# Warmup Iteration   4: 4693754.940 ops/s
# Warmup Iteration   5: 4687763.554 ops/s
Iteration   1: 4799294.698 ops/s
                 ·gc.alloc.rate:      0.575 MB/sec
                 ·gc.alloc.rate.norm: 0.147 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4778148.427 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 4790372.518 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 4810705.796 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 4800274.207 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4737248.665 ops/s
                 ·gc.alloc.rate:      6.063 MB/sec
                 ·gc.alloc.rate.norm: 1.569 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4787473.412 ops/s
                 ·gc.alloc.rate:      0.634 MB/sec
                 ·gc.alloc.rate.norm: 0.162 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 4808992.157 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 4801181.201 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 4801887.536 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.foreachAcc":
  4843048.272 ±(99.9%) 48955.961 ops/s [Average]
  (min, avg, max) = (4737248.665, 4843048.272, 4907886.241), stdev = 56377.757
  CI (99.9%): [4794092.311, 4892004.233] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.366 ±(99.9%) 1.175 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.366, 6.063), stdev = 1.354
  CI (99.9%): [≈ 0, 1.542] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.095 ±(99.9%) 0.304 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.095, 1.569), stdev = 0.350
  CI (99.9%): [≈ 0, 0.399] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.recursiveAcc
# Parameters: (size = 10)

# Run progress: 13.33% complete, ETA 00:58:00
# Fork: 1 of 2
# Warmup Iteration   1: 7710602.958 ops/s
# Warmup Iteration   2: 63506722.758 ops/s
# Warmup Iteration   3: 80538462.108 ops/s
# Warmup Iteration   4: 80408612.814 ops/s
# Warmup Iteration   5: 80045545.416 ops/s
Iteration   1: 80631605.904 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 80689499.862 ops/s
                 ·gc.alloc.rate:      0.160 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 80448482.583 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 80641655.726 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 80543990.988 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 80712974.369 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 80111060.900 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 80483111.106 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 80020554.770 ops/s
                 ·gc.alloc.rate:      1.444 MB/sec
                 ·gc.alloc.rate.norm: 0.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 80663900.885 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 14.44% complete, ETA 00:57:15
# Fork: 2 of 2
# Warmup Iteration   1: 15110983.761 ops/s
# Warmup Iteration   2: 67331617.593 ops/s
# Warmup Iteration   3: 80199331.970 ops/s
# Warmup Iteration   4: 79868683.248 ops/s
# Warmup Iteration   5: 80549025.262 ops/s
Iteration   1: 80373320.053 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 80671953.187 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 80639418.522 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 80190629.001 ops/s
                 ·gc.alloc.rate:      0.489 MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 80397637.053 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 78199513.582 ops/s
                 ·gc.alloc.rate:      0.796 MB/sec
                 ·gc.alloc.rate.norm: 0.012 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 79791876.179 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 80630137.252 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 80705942.759 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 80740723.723 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.recursiveAcc":
  80364399.420 ±(99.9%) 497876.843 ops/s [Average]
  (min, avg, max) = (78199513.582, 80364399.420, 80740723.723), stdev = 573355.713
  CI (99.9%): [79866522.577, 80862276.263] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate":
  0.145 ±(99.9%) 0.319 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.145, 1.444), stdev = 0.368
  CI (99.9%): [≈ 0, 0.464] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  0.002 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.002, 0.022), stdev = 0.006
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.recursiveAcc
# Parameters: (size = 100)

# Run progress: 15.56% complete, ETA 00:56:31
# Fork: 1 of 2
# Warmup Iteration   1: 871594.492 ops/s
# Warmup Iteration   2: 7994803.527 ops/s
# Warmup Iteration   3: 9716717.457 ops/s
# Warmup Iteration   4: 9753365.608 ops/s
# Warmup Iteration   5: 9463138.889 ops/s
Iteration   1: 9739933.158 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9738419.583 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9721635.828 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9752551.507 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9734975.005 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 9758412.717 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 9753847.694 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 9760939.102 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 9755137.537 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 9767399.866 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 16.67% complete, ETA 00:55:46
# Fork: 2 of 2
# Warmup Iteration   1: 844870.221 ops/s
# Warmup Iteration   2: 7680219.816 ops/s
# Warmup Iteration   3: 9700226.448 ops/s
# Warmup Iteration   4: 9734714.283 ops/s
# Warmup Iteration   5: 9768355.109 ops/s
Iteration   1: 9748710.808 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9750764.869 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9697423.446 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9758414.516 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9750459.722 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 9781404.487 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 9736165.269 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 9747393.913 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 9764342.550 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 9753028.650 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.recursiveAcc":
  9748568.011 ±(99.9%) 15434.286 ops/s [Average]
  (min, avg, max) = (9697423.446, 9748568.011, 9781404.487), stdev = 17774.147
  CI (99.9%): [9733133.725, 9764002.298] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ArrayAccumulateBench.recursiveAcc
# Parameters: (size = 500)

# Run progress: 17.78% complete, ETA 00:55:01
# Fork: 1 of 2
# Warmup Iteration   1: 159699.149 ops/s
# Warmup Iteration   2: 1823055.066 ops/s
# Warmup Iteration   3: 2110288.315 ops/s
# Warmup Iteration   4: 2132293.199 ops/s
# Warmup Iteration   5: 2134086.611 ops/s
Iteration   1: 2137025.045 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2137069.676 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2123918.463 ops/s
                 ·gc.alloc.rate:      0.248 MB/sec
                 ·gc.alloc.rate.norm: 0.143 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2131304.717 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2136618.518 ops/s
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 0.032 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 2136381.239 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 2120509.301 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 2124417.807 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 2138324.641 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 2136340.955 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 18.89% complete, ETA 00:54:17
# Fork: 2 of 2
# Warmup Iteration   1: 186990.042 ops/s
# Warmup Iteration   2: 1613382.702 ops/s
# Warmup Iteration   3: 2132711.123 ops/s
# Warmup Iteration   4: 2127712.475 ops/s
# Warmup Iteration   5: 2133564.285 ops/s
Iteration   1: 2137287.143 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2136921.319 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2136971.804 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2135516.720 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2134777.617 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 2135562.452 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 2132859.563 ops/s
                 ·gc.alloc.rate:      0.317 MB/sec
                 ·gc.alloc.rate.norm: 0.182 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 2134890.811 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 2137030.699 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 2138270.386 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ArrayAccumulateBench.recursiveAcc":
  2134099.944 ±(99.9%) 4458.293 ops/s [Average]
  (min, avg, max) = (2120509.301, 2134099.944, 2138324.641), stdev = 5134.177
  CI (99.9%): [2129641.650, 2138558.237] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate":
  0.031 ±(99.9%) 0.076 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.031, 0.317), stdev = 0.088
  CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  0.018 ±(99.9%) 0.044 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.018, 0.182), stdev = 0.050
  CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)

Secondary result "bench.ArrayAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foldLeftAcc
# Parameters: (size = 10)

# Run progress: 20.00% complete, ETA 00:53:32
# Fork: 1 of 2
# Warmup Iteration   1: 2647135.608 ops/s
# Warmup Iteration   2: 86010011.432 ops/s
# Warmup Iteration   3: 106443361.315 ops/s
# Warmup Iteration   4: 102405854.004 ops/s
# Warmup Iteration   5: 107016223.705 ops/s
Iteration   1: 106797506.478 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 106722261.352 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 106343767.860 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 106750189.278 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 106403189.192 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 105837543.516 ops/s
                 ·gc.alloc.rate:      3.108 MB/sec
                 ·gc.alloc.rate.norm: 0.036 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 106721091.309 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 106975523.486 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 106629966.127 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 106731522.696 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.11% complete, ETA 00:52:47
# Fork: 2 of 2
# Warmup Iteration   1: 23546375.411 ops/s
# Warmup Iteration   2: 91034839.573 ops/s
# Warmup Iteration   3: 105780915.295 ops/s
# Warmup Iteration   4: 106595061.512 ops/s
# Warmup Iteration   5: 107503939.065 ops/s
Iteration   1: 107012667.341 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 107992414.430 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 106570225.844 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 107512758.153 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 107543746.693 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 106976274.056 ops/s
                 ·gc.alloc.rate:      1.068 MB/sec
                 ·gc.alloc.rate.norm: 0.012 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 107493105.846 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 105729444.230 ops/s
                 ·gc.alloc.rate:      3.498 MB/sec
                 ·gc.alloc.rate.norm: 0.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 107253909.754 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 107952207.498 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foldLeftAcc":
  106897465.757 ±(99.9%) 525312.367 ops/s [Average]
  (min, avg, max) = (105729444.230, 106897465.757, 107992414.430), stdev = 604950.503
  CI (99.9%): [106372153.390, 107422778.124] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.384 ±(99.9%) 0.893 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.384, 3.498), stdev = 1.028
  CI (99.9%): [≈ 0, 1.277] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.004 ±(99.9%) 0.010 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.004, 0.041), stdev = 0.012
  CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foldLeftAcc
# Parameters: (size = 100)

# Run progress: 22.22% complete, ETA 00:52:02
# Fork: 1 of 2
# Warmup Iteration   1: 215698.879 ops/s
# Warmup Iteration   2: 28104054.078 ops/s
# Warmup Iteration   3: 35759368.869 ops/s
# Warmup Iteration   4: 35941126.372 ops/s
# Warmup Iteration   5: 35934428.736 ops/s
Iteration   1: 36109838.041 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35576832.610 ops/s
                 ·gc.alloc.rate:      6.492 MB/sec
                 ·gc.alloc.rate.norm: 0.224 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 35753586.816 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 35988765.737 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36061141.522 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 35526046.471 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 36091939.977 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 36032681.489 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 36098091.539 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36021248.741 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.33% complete, ETA 00:51:18
# Fork: 2 of 2
# Warmup Iteration   1: 93362.535 ops/s
# Warmup Iteration   2: 27930682.942 ops/s
# Warmup Iteration   3: 35804638.261 ops/s
# Warmup Iteration   4: 36024695.114 ops/s
# Warmup Iteration   5: 36089655.801 ops/s
Iteration   1: 36112036.376 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36053445.063 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 35935967.463 ops/s
                 ·gc.alloc.rate:      1.393 MB/sec
                 ·gc.alloc.rate.norm: 0.047 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36060634.892 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36080891.499 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 36074933.698 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 36024697.978 ops/s
                 ·gc.alloc.rate:      0.072 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 35997808.723 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 36049292.057 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36061569.926 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foldLeftAcc":
  35985572.531 ±(99.9%) 146115.601 ops/s [Average]
  (min, avg, max) = (35526046.471, 35985572.531, 36112036.376), stdev = 168266.944
  CI (99.9%): [35839456.929, 36131688.132] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.398 ±(99.9%) 1.274 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.398, 6.492), stdev = 1.468
  CI (99.9%): [≈ 0, 1.672] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.014 ±(99.9%) 0.044 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.014, 0.224), stdev = 0.051
  CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foldLeftAcc
# Parameters: (size = 500)

# Run progress: 24.44% complete, ETA 00:50:33
# Fork: 1 of 2
# Warmup Iteration   1: 16693.608 ops/s
# Warmup Iteration   2: 5128493.844 ops/s
# Warmup Iteration   3: 6194569.335 ops/s
# Warmup Iteration   4: 6653631.316 ops/s
# Warmup Iteration   5: 6659772.880 ops/s
Iteration   1: 6695612.227 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6694040.361 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6684503.993 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6676169.969 ops/s
                 ·gc.alloc.rate:      1.607 MB/sec
                 ·gc.alloc.rate.norm: 0.294 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6695725.332 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6694729.645 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6681027.053 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6688028.800 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6694047.865 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6693700.148 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 25.56% complete, ETA 00:49:48
# Fork: 2 of 2
# Warmup Iteration   1: 17613.715 ops/s
# Warmup Iteration   2: 5133878.018 ops/s
# Warmup Iteration   3: 6270784.336 ops/s
# Warmup Iteration   4: 6593743.760 ops/s
# Warmup Iteration   5: 6682041.422 ops/s
Iteration   1: 6650560.560 ops/s
                 ·gc.alloc.rate:      5.005 MB/sec
                 ·gc.alloc.rate.norm: 0.923 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6692918.124 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6696117.353 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6661950.486 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6690709.735 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6686995.977 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6681090.720 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6672745.134 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6696588.917 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6689874.525 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foldLeftAcc":
  6685856.846 ±(99.9%) 10753.623 ops/s [Average]
  (min, avg, max) = (6650560.560, 6685856.846, 6696588.917), stdev = 12383.888
  CI (99.9%): [6675103.223, 6696610.469] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.331 ±(99.9%) 1.005 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.331, 5.005), stdev = 1.157
  CI (99.9%): [≈ 0, 1.336] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.061 ±(99.9%) 0.185 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.061, 0.923), stdev = 0.213
  CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foreachAcc
# Parameters: (size = 10)

# Run progress: 26.67% complete, ETA 00:49:03
# Fork: 1 of 2
# Warmup Iteration   1: 2045878.200 ops/s
# Warmup Iteration   2: 87463817.428 ops/s
# Warmup Iteration   3: 106023058.643 ops/s
# Warmup Iteration   4: 105458282.901 ops/s
# Warmup Iteration   5: 103215908.938 ops/s
Iteration   1: 105153350.499 ops/s
                 ·gc.alloc.rate:      0.431 MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 105491970.006 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 105177147.369 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 104974883.297 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 106116289.040 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 105495546.442 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 106061718.865 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 104812376.110 ops/s
                 ·gc.alloc.rate:      0.198 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 105709666.642 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 105352530.707 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 27.78% complete, ETA 00:48:18
# Fork: 2 of 2
# Warmup Iteration   1: 1322280.101 ops/s
# Warmup Iteration   2: 90750059.713 ops/s
# Warmup Iteration   3: 105883018.063 ops/s
# Warmup Iteration   4: 106085553.058 ops/s
# Warmup Iteration   5: 105704087.977 ops/s
Iteration   1: 105717184.162 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 106079591.537 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 105544068.541 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 106130727.831 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 105433033.825 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 105425488.241 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 105225766.407 ops/s
                 ·gc.alloc.rate:      0.525 MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 105987504.166 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 104970321.260 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 105627773.560 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foreachAcc":
  105524346.925 ±(99.9%) 352158.738 ops/s [Average]
  (min, avg, max) = (104812376.110, 105524346.925, 106130727.831), stdev = 405546.527
  CI (99.9%): [105172188.187, 105876505.664] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.058 ±(99.9%) 0.131 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.058, 0.525), stdev = 0.151
  CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.001, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foreachAcc
# Parameters: (size = 100)

# Run progress: 28.89% complete, ETA 00:47:34
# Fork: 1 of 2
# Warmup Iteration   1: 3339207.446 ops/s
# Warmup Iteration   2: 31755564.776 ops/s
# Warmup Iteration   3: 35659922.007 ops/s
# Warmup Iteration   4: 34726944.864 ops/s
# Warmup Iteration   5: 35676785.380 ops/s
Iteration   1: 35669426.131 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35728654.379 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 35656627.588 ops/s
                 ·gc.alloc.rate:      0.207 MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 35711426.957 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 35732697.797 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 35768194.240 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 34792583.047 ops/s
                 ·gc.alloc.rate:      14.116 MB/sec
                 ·gc.alloc.rate.norm: 0.497 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 35733576.843 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 35755199.303 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 35590401.262 ops/s
                 ·gc.alloc.rate:      1.543 MB/sec
                 ·gc.alloc.rate.norm: 0.053 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.00% complete, ETA 00:46:49
# Fork: 2 of 2
# Warmup Iteration   1: 119918.541 ops/s
# Warmup Iteration   2: 24633683.109 ops/s
# Warmup Iteration   3: 35585190.854 ops/s
# Warmup Iteration   4: 34751822.123 ops/s
# Warmup Iteration   5: 35291867.002 ops/s
Iteration   1: 35743147.340 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35518971.533 ops/s
                 ·gc.alloc.rate:      0.980 MB/sec
                 ·gc.alloc.rate.norm: 0.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 35710782.748 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 35489069.971 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 35546914.027 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 35758482.788 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 35702700.976 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 35482311.459 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 35137011.771 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 35291059.346 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foreachAcc":
  35575961.975 ±(99.9%) 216315.266 ops/s [Average]
  (min, avg, max) = (34792583.047, 35575961.975, 35768194.240), stdev = 249108.983
  CI (99.9%): [35359646.709, 35792277.242] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.842 ±(99.9%) 2.735 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.842, 14.116), stdev = 3.149
  CI (99.9%): [≈ 0, 3.577] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.030 ±(99.9%) 0.096 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.030, 0.497), stdev = 0.111
  CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.foreachAcc
# Parameters: (size = 500)

# Run progress: 31.11% complete, ETA 00:46:05
# Fork: 1 of 2
# Warmup Iteration   1: 23273.566 ops/s
# Warmup Iteration   2: 5076026.696 ops/s
# Warmup Iteration   3: 6182996.098 ops/s
# Warmup Iteration   4: 6573859.122 ops/s
# Warmup Iteration   5: 6564476.096 ops/s
Iteration   1: 6592928.816 ops/s
                 ·gc.alloc.rate:      7.882 MB/sec
                 ·gc.alloc.rate.norm: 1.463 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6635052.919 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6627889.836 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6631110.584 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6621872.365 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6592622.801 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6614945.151 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6630155.332 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6614458.291 ops/s
                 ·gc.alloc.rate:      0.047 MB/sec
                 ·gc.alloc.rate.norm: 0.009 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6573305.521 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 32.22% complete, ETA 00:45:20
# Fork: 2 of 2
# Warmup Iteration   1: 138232.114 ops/s
# Warmup Iteration   2: 5568640.842 ops/s
# Warmup Iteration   3: 6599005.569 ops/s
# Warmup Iteration   4: 6625698.067 ops/s
# Warmup Iteration   5: 6575795.165 ops/s
Iteration   1: 6630800.047 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6627628.026 ops/s
                 ·gc.alloc.rate:      1.082 MB/sec
                 ·gc.alloc.rate.norm: 0.200 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6609705.334 ops/s
                 ·gc.alloc.rate:      3.287 MB/sec
                 ·gc.alloc.rate.norm: 0.609 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6602699.756 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6597162.714 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6622832.956 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6634793.832 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6625682.027 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6613557.532 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6627717.033 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.foreachAcc":
  6616346.044 ±(99.9%) 14683.562 ops/s [Average]
  (min, avg, max) = (6573305.521, 6616346.044, 6635052.919), stdev = 16909.612
  CI (99.9%): [6601662.482, 6631029.606] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.615 ±(99.9%) 1.625 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.615, 7.882), stdev = 1.871
  CI (99.9%): [≈ 0, 2.240] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.114 ±(99.9%) 0.302 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.114, 1.463), stdev = 0.347
  CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.recursiveAcc
# Parameters: (size = 10)

# Run progress: 33.33% complete, ETA 00:44:35
# Fork: 1 of 2
# Warmup Iteration   1: 1359948.246 ops/s
# Warmup Iteration   2: 73659726.388 ops/s
# Warmup Iteration   3: 112899362.392 ops/s
# Warmup Iteration   4: 113134021.328 ops/s
# Warmup Iteration   5: 112239460.308 ops/s
Iteration   1: 112947644.860 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 113224888.702 ops/s
                 ·gc.alloc.rate:      0.940 MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 113216244.132 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 112939983.754 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 113345858.410 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 112749108.625 ops/s
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 113002362.472 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 113273374.023 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 113642539.956 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 113399253.630 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 34.44% complete, ETA 00:43:51
# Fork: 2 of 2
# Warmup Iteration   1: 1473413.872 ops/s
# Warmup Iteration   2: 72816024.863 ops/s
# Warmup Iteration   3: 114020644.342 ops/s
# Warmup Iteration   4: 109709679.889 ops/s
# Warmup Iteration   5: 113672096.808 ops/s
Iteration   1: 113516889.034 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 113569858.727 ops/s
                 ·gc.alloc.rate:      0.518 MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 113319632.034 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 114153311.870 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 113172640.603 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 113544671.490 ops/s
                 ·gc.alloc.rate:      0.196 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 114243282.718 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 113734080.480 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 113087008.434 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 113338655.947 ops/s
                 ·gc.alloc.rate:      2.046 MB/sec
                 ·gc.alloc.rate.norm: 0.022 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.recursiveAcc":
  113371064.495 ±(99.9%) 329579.881 ops/s [Average]
  (min, avg, max) = (112749108.625, 113371064.495, 114243282.718), stdev = 379544.681
  CI (99.9%): [113041484.614, 113700644.376] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  0.188 ±(99.9%) 0.431 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.188, 2.046), stdev = 0.496
  CI (99.9%): [≈ 0, 0.619] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  0.002 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.002, 0.022), stdev = 0.005
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.recursiveAcc
# Parameters: (size = 100)

# Run progress: 35.56% complete, ETA 00:43:06
# Fork: 1 of 2
# Warmup Iteration   1: 557728.827 ops/s
# Warmup Iteration   2: 32620449.288 ops/s
# Warmup Iteration   3: 36128435.932 ops/s
# Warmup Iteration   4: 36107993.918 ops/s
# Warmup Iteration   5: 35599861.079 ops/s
Iteration   1: 36158618.852 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35648183.470 ops/s
                 ·gc.alloc.rate:      4.564 MB/sec
                 ·gc.alloc.rate.norm: 0.157 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36212410.478 ops/s
                 ·gc.alloc.rate:      6.186 MB/sec
                 ·gc.alloc.rate.norm: 0.209 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36062556.312 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36076086.925 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 36082322.596 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 36164358.965 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 36134674.981 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 35980108.131 ops/s
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36141572.174 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 36.67% complete, ETA 00:42:22
# Fork: 2 of 2
# Warmup Iteration   1: 328275.509 ops/s
# Warmup Iteration   2: 26951188.525 ops/s
# Warmup Iteration   3: 35834589.933 ops/s
# Warmup Iteration   4: 35683011.400 ops/s
# Warmup Iteration   5: 35882982.542 ops/s
Iteration   1: 36077110.489 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35972942.639 ops/s
                 ·gc.alloc.rate:      0.206 MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36149371.012 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36123850.818 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36182929.919 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 36149558.599 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 36079166.061 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 35777763.318 ops/s
                 ·gc.alloc.rate:      4.823 MB/sec
                 ·gc.alloc.rate.norm: 0.165 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 35833249.923 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36036319.284 ops/s
                 ·gc.alloc.rate:      0.457 MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.recursiveAcc":
  36052157.747 ±(99.9%) 127038.050 ops/s [Average]
  (min, avg, max) = (35648183.470, 36052157.747, 36212410.478), stdev = 146297.208
  CI (99.9%): [35925119.697, 36179195.798] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  0.815 ±(99.9%) 1.659 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.815, 6.186), stdev = 1.910
  CI (99.9%): [≈ 0, 2.473] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  0.028 ±(99.9%) 0.057 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.028, 0.209), stdev = 0.065
  CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.recursiveAcc
# Parameters: (size = 500)

# Run progress: 37.78% complete, ETA 00:41:37
# Fork: 1 of 2
# Warmup Iteration   1: 28243.681 ops/s
# Warmup Iteration   2: 5297079.543 ops/s
# Warmup Iteration   3: 6375229.581 ops/s
# Warmup Iteration   4: 6598523.017 ops/s
# Warmup Iteration   5: 6645371.069 ops/s
Iteration   1: 6614445.934 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6636355.489 ops/s
                 ·gc.alloc.rate:      0.393 MB/sec
                 ·gc.alloc.rate.norm: 0.072 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6632075.398 ops/s
                 ·gc.alloc.rate:      6.472 MB/sec
                 ·gc.alloc.rate.norm: 1.196 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6598736.831 ops/s
                 ·gc.alloc.rate:      5.578 MB/sec
                 ·gc.alloc.rate.norm: 1.036 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6617667.619 ops/s
                 ·gc.alloc.rate:      2.384 MB/sec
                 ·gc.alloc.rate.norm: 0.442 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6643088.950 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6645643.498 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6661073.270 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6654578.978 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6643787.558 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.89% complete, ETA 00:40:52
# Fork: 2 of 2
# Warmup Iteration   1: 441544.931 ops/s
# Warmup Iteration   2: 6176119.627 ops/s
# Warmup Iteration   3: 6622526.087 ops/s
# Warmup Iteration   4: 6626595.008 ops/s
# Warmup Iteration   5: 6638889.529 ops/s
Iteration   1: 6639843.388 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6636143.414 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6566563.999 ops/s
                 ·gc.alloc.rate:      14.804 MB/sec
                 ·gc.alloc.rate.norm: 2.765 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6614754.826 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6603526.732 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6609847.339 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6639828.494 ops/s
                 ·gc.alloc.rate:      0.078 MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6626235.679 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6642852.410 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6624391.769 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.recursiveAcc":
  6627572.079 ±(99.9%) 19190.430 ops/s [Average]
  (min, avg, max) = (6566563.999, 6627572.079, 6661073.270), stdev = 22099.728
  CI (99.9%): [6608381.648, 6646762.509] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  1.486 ±(99.9%) 3.174 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 1.486, 14.804), stdev = 3.655
  CI (99.9%): [≈ 0, 4.660] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  0.276 ±(99.9%) 0.592 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.276, 2.765), stdev = 0.682
  CI (99.9%): [≈ 0, 0.868] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.recursiveAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.whileAcc
# Parameters: (size = 10)

# Run progress: 40.00% complete, ETA 00:40:08
# Fork: 1 of 2
# Warmup Iteration   1: 2252550.919 ops/s
# Warmup Iteration   2: 72987126.097 ops/s
# Warmup Iteration   3: 93263071.103 ops/s
# Warmup Iteration   4: 92672718.872 ops/s
# Warmup Iteration   5: 93184524.764 ops/s
Iteration   1: 93479615.112 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 93609908.020 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 93470625.375 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 93582739.718 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 93426687.270 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 93558000.183 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 93037133.896 ops/s
                 ·gc.alloc.rate:      3.579 MB/sec
                 ·gc.alloc.rate.norm: 0.047 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 93616515.633 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 93775746.807 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 93412793.144 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 41.11% complete, ETA 00:39:23
# Fork: 2 of 2
# Warmup Iteration   1: 1746820.767 ops/s
# Warmup Iteration   2: 73632994.511 ops/s
# Warmup Iteration   3: 91282327.703 ops/s
# Warmup Iteration   4: 91927582.880 ops/s
# Warmup Iteration   5: 91201783.091 ops/s
Iteration   1: 91742607.195 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 91985791.748 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 92122511.951 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 91529461.373 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 92028098.653 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 92025361.970 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 91790952.277 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 91603919.473 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 91971022.538 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 91898408.346 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.whileAcc":
  92683395.034 ±(99.9%) 743397.681 ops/s [Average]
  (min, avg, max) = (91529461.373, 92683395.034, 93775746.807), stdev = 856097.875
  CI (99.9%): [91939997.353, 93426792.715] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate":
  0.179 ±(99.9%) 0.695 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.179, 3.579), stdev = 0.800
  CI (99.9%): [≈ 0, 0.874] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm":
  0.002 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.002, 0.047), stdev = 0.011
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.whileAcc
# Parameters: (size = 100)

# Run progress: 42.22% complete, ETA 00:38:38
# Fork: 1 of 2
# Warmup Iteration   1: 2126006.633 ops/s
# Warmup Iteration   2: 29580807.327 ops/s
# Warmup Iteration   3: 36139855.368 ops/s
# Warmup Iteration   4: 35943338.393 ops/s
# Warmup Iteration   5: 36173437.885 ops/s
Iteration   1: 35970407.494 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36011513.848 ops/s
                 ·gc.alloc.rate:      0.910 MB/sec
                 ·gc.alloc.rate.norm: 0.031 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36212136.465 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36143164.585 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36192124.811 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 36054617.193 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 36175262.772 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 35905313.647 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 36217715.705 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36192115.573 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 43.33% complete, ETA 00:37:54
# Fork: 2 of 2
# Warmup Iteration   1: 174334.518 ops/s
# Warmup Iteration   2: 26351362.480 ops/s
# Warmup Iteration   3: 36124880.978 ops/s
# Warmup Iteration   4: 36083335.024 ops/s
# Warmup Iteration   5: 36010764.733 ops/s
Iteration   1: 36176878.516 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35077227.043 ops/s
                 ·gc.alloc.rate:      8.421 MB/sec
                 ·gc.alloc.rate.norm: 0.294 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36179085.581 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36192265.450 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36160820.513 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 36065521.264 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 35954425.217 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 36167431.237 ops/s
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 36070180.961 ops/s
                 ·gc.alloc.rate:      2.156 MB/sec
                 ·gc.alloc.rate.norm: 0.073 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 36097462.297 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.whileAcc":
  36060783.509 ±(99.9%) 216679.470 ops/s [Average]
  (min, avg, max) = (35077227.043, 36060783.509, 36217715.705), stdev = 249528.399
  CI (99.9%): [35844104.039, 36277462.978] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate":
  0.577 ±(99.9%) 1.664 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.577, 8.421), stdev = 1.916
  CI (99.9%): [≈ 0, 2.241] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm":
  0.020 ±(99.9%) 0.058 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.020, 0.294), stdev = 0.067
  CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.IteratorAccumulateBench.whileAcc
# Parameters: (size = 500)

# Run progress: 44.44% complete, ETA 00:37:09
# Fork: 1 of 2
# Warmup Iteration   1: 31443.704 ops/s
# Warmup Iteration   2: 6155533.500 ops/s
# Warmup Iteration   3: 6575499.540 ops/s
# Warmup Iteration   4: 6630302.393 ops/s
# Warmup Iteration   5: 6632228.493 ops/s
Iteration   1: 6632732.406 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6635190.282 ops/s
                 ·gc.alloc.rate:      1.114 MB/sec
                 ·gc.alloc.rate.norm: 0.206 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6606447.427 ops/s
                 ·gc.alloc.rate:      6.233 MB/sec
                 ·gc.alloc.rate.norm: 1.155 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6532564.112 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6637557.399 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6599144.513 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6636782.947 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6644084.294 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6620192.536 ops/s
                 ·gc.alloc.rate:      2.423 MB/sec
                 ·gc.alloc.rate.norm: 0.448 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6612931.321 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 45.56% complete, ETA 00:36:24
# Fork: 2 of 2
# Warmup Iteration   1: 29531.994 ops/s
# Warmup Iteration   2: 6330315.052 ops/s
# Warmup Iteration   3: 6671287.356 ops/s
# Warmup Iteration   4: 6508589.232 ops/s
# Warmup Iteration   5: 6638954.909 ops/s
Iteration   1: 6645972.631 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6623735.678 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6656174.713 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6654662.866 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6629981.947 ops/s
                 ·gc.alloc.rate:      2.655 MB/sec
                 ·gc.alloc.rate.norm: 0.491 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 6633550.752 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 6628334.112 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 6616624.348 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 6606439.695 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 6613842.518 ops/s
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.IteratorAccumulateBench.whileAcc":
  6623347.325 ±(99.9%) 23092.545 ops/s [Average]
  (min, avg, max) = (6532564.112, 6623347.325, 6656174.713), stdev = 26593.410
  CI (99.9%): [6600254.779, 6646439.870] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate":
  0.624 ±(99.9%) 1.340 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.624, 6.233), stdev = 1.543
  CI (99.9%): [≈ 0, 1.964] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm":
  0.116 ±(99.9%) 0.248 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.116, 1.155), stdev = 0.286
  CI (99.9%): [≈ 0, 0.364] (assumes normal distribution)

Secondary result "bench.IteratorAccumulateBench.whileAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foldLeftAcc
# Parameters: (size = 10)

# Run progress: 46.67% complete, ETA 00:35:40
# Fork: 1 of 2
# Warmup Iteration   1: 2774112.853 ops/s
# Warmup Iteration   2: 31860915.765 ops/s
# Warmup Iteration   3: 39136810.319 ops/s
# Warmup Iteration   4: 39263079.546 ops/s
# Warmup Iteration   5: 38988363.532 ops/s
Iteration   1: 38963512.378 ops/s
                 ·gc.alloc.rate:      1.367 MB/sec
                 ·gc.alloc.rate.norm: 0.043 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 38867777.880 ops/s
                 ·gc.alloc.rate:      0.990 MB/sec
                 ·gc.alloc.rate.norm: 0.031 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 39042044.364 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 39051891.139 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 39313174.564 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 39190571.334 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 39306598.358 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 39324474.036 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 39336307.043 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 39142056.938 ops/s
                 ·gc.alloc.rate:      1.998 MB/sec
                 ·gc.alloc.rate.norm: 0.063 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.78% complete, ETA 00:34:55
# Fork: 2 of 2
# Warmup Iteration   1: 818284.118 ops/s
# Warmup Iteration   2: 35183246.669 ops/s
# Warmup Iteration   3: 39039961.784 ops/s
# Warmup Iteration   4: 38499257.715 ops/s
# Warmup Iteration   5: 39309925.287 ops/s
Iteration   1: 39142413.898 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 39164067.859 ops/s
                 ·gc.alloc.rate:      0.622 MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 38949206.030 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 39324489.330 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 39088457.327 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 38709482.402 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 39205526.378 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 39255969.394 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 39325106.038 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 39277039.151 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foldLeftAcc":
  39149008.292 ±(99.9%) 152197.007 ops/s [Average]
  (min, avg, max) = (38709482.402, 39149008.292, 39336307.043), stdev = 175270.300
  CI (99.9%): [38996811.285, 39301205.300] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.249 ±(99.9%) 0.488 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.249, 1.998), stdev = 0.562
  CI (99.9%): [≈ 0, 0.737] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.008 ±(99.9%) 0.015 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.008, 0.063), stdev = 0.018
  CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foldLeftAcc
# Parameters: (size = 100)

# Run progress: 48.89% complete, ETA 00:34:11
# Fork: 1 of 2
# Warmup Iteration   1: 818867.265 ops/s
# Warmup Iteration   2: 3288946.648 ops/s
# Warmup Iteration   3: 3576408.465 ops/s
# Warmup Iteration   4: 3558306.706 ops/s
# Warmup Iteration   5: 3557211.521 ops/s
Iteration   1: 3579152.803 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3586641.151 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3588243.099 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3592994.230 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3593406.502 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3585949.248 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 3567874.558 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3583462.732 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3576881.461 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 3569124.471 ops/s
                 ·gc.alloc.rate:      1.096 MB/sec
                 ·gc.alloc.rate.norm: 0.377 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 50.00% complete, ETA 00:33:26
# Fork: 2 of 2
# Warmup Iteration   1: 73742.222 ops/s
# Warmup Iteration   2: 3126631.190 ops/s
# Warmup Iteration   3: 3588504.541 ops/s
# Warmup Iteration   4: 3583566.682 ops/s
# Warmup Iteration   5: 3588907.391 ops/s
Iteration   1: 3592968.654 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3591275.388 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3592394.779 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3576976.611 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3570789.872 ops/s
                 ·gc.alloc.rate:      5.382 MB/sec
                 ·gc.alloc.rate.norm: 1.847 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3574742.476 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 3590063.680 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3585882.736 ops/s
                 ·gc.alloc.rate:      0.546 MB/sec
                 ·gc.alloc.rate.norm: 0.187 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3592939.017 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 3593222.108 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foldLeftAcc":
  3584249.279 ±(99.9%) 7641.448 ops/s [Average]
  (min, avg, max) = (3567874.558, 3584249.279, 3593406.502), stdev = 8799.902
  CI (99.9%): [3576607.831, 3591890.726] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.351 ±(99.9%) 1.054 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.351, 5.382), stdev = 1.214
  CI (99.9%): [≈ 0, 1.405] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.121 ±(99.9%) 0.362 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.121, 1.847), stdev = 0.417
  CI (99.9%): [≈ 0, 0.482] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foldLeftAcc
# Parameters: (size = 500)

# Run progress: 51.11% complete, ETA 00:32:42
# Fork: 1 of 2
# Warmup Iteration   1: 14365.215 ops/s
# Warmup Iteration   2: 626660.896 ops/s
# Warmup Iteration   3: 706747.875 ops/s
# Warmup Iteration   4: 731843.810 ops/s
# Warmup Iteration   5: 735412.245 ops/s
Iteration   1: 734565.267 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 726841.235 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 723034.268 ops/s
                 ·gc.alloc.rate:      3.690 MB/sec
                 ·gc.alloc.rate.norm: 6.254 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 735963.166 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 737821.948 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 730529.890 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 733985.323 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 728607.589 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 737336.891 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 731047.668 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.22% complete, ETA 00:31:57
# Fork: 2 of 2
# Warmup Iteration   1: 14864.922 ops/s
# Warmup Iteration   2: 554095.838 ops/s
# Warmup Iteration   3: 727884.022 ops/s
# Warmup Iteration   4: 733121.782 ops/s
# Warmup Iteration   5: 732664.412 ops/s
Iteration   1: 731833.555 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 729647.266 ops/s
                 ·gc.alloc.rate:      0.560 MB/sec
                 ·gc.alloc.rate.norm: 0.941 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 729691.630 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 733849.876 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 730999.777 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 734505.254 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 733473.575 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 730334.091 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 729287.452 ops/s
                 ·gc.alloc.rate:      1.305 MB/sec
                 ·gc.alloc.rate.norm: 2.193 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 730207.406 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foldLeftAcc":
  731678.156 ±(99.9%) 3119.580 ops/s [Average]
  (min, avg, max) = (723034.268, 731678.156, 737821.948), stdev = 3592.513
  CI (99.9%): [728558.577, 734797.736] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.278 ±(99.9%) 0.748 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.278, 3.690), stdev = 0.861
  CI (99.9%): [≈ 0, 1.026] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.470 ±(99.9%) 1.266 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.470, 6.254), stdev = 1.458
  CI (99.9%): [≈ 0, 1.736] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foreachAcc
# Parameters: (size = 10)

# Run progress: 53.33% complete, ETA 00:31:13
# Fork: 1 of 2
# Warmup Iteration   1: 2256148.064 ops/s
# Warmup Iteration   2: 32653691.104 ops/s
# Warmup Iteration   3: 32192139.490 ops/s
# Warmup Iteration   4: 32130550.979 ops/s
# Warmup Iteration   5: 32081691.407 ops/s
Iteration   1: 32289069.651 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 32264434.947 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 32218395.493 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 32244296.423 ops/s
                 ·gc.alloc.rate:      2.849 MB/sec
                 ·gc.alloc.rate.norm: 0.108 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 32281691.522 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 32273158.103 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 32192226.316 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 32282617.027 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 32248010.646 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 32314768.828 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 54.44% complete, ETA 00:30:28
# Fork: 2 of 2
# Warmup Iteration   1: 2394907.626 ops/s
# Warmup Iteration   2: 34577456.703 ops/s
# Warmup Iteration   3: 37979075.176 ops/s
# Warmup Iteration   4: 36064455.161 ops/s
# Warmup Iteration   5: 37596544.496 ops/s
Iteration   1: 37991021.225 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 37944404.526 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 37895520.473 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 38005680.302 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 37939491.852 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 37954330.160 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 37769601.377 ops/s
                 ·gc.alloc.rate:      1.896 MB/sec
                 ·gc.alloc.rate.norm: 0.062 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 37769514.125 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 37759689.339 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 37751721.984 ops/s
                 ·gc.alloc.rate:      3.673 MB/sec
                 ·gc.alloc.rate.norm: 0.119 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foreachAcc":
  35069482.216 ±(99.9%) 2503096.831 ops/s [Average]
  (min, avg, max) = (32192226.316, 35069482.216, 38005680.302), stdev = 2882570.033
  CI (99.9%): [32566385.385, 37572579.047] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.421 ±(99.9%) 0.927 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.421, 3.673), stdev = 1.068
  CI (99.9%): [≈ 0, 1.348] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.014 ±(99.9%) 0.032 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.014, 0.119), stdev = 0.037
  CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foreachAcc
# Parameters: (size = 100)

# Run progress: 55.56% complete, ETA 00:29:43
# Fork: 1 of 2
# Warmup Iteration   1: 205133.616 ops/s
# Warmup Iteration   2: 3490636.448 ops/s
# Warmup Iteration   3: 3590607.065 ops/s
# Warmup Iteration   4: 3585645.640 ops/s
# Warmup Iteration   5: 3589116.222 ops/s
Iteration   1: 3592573.122 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3594364.367 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3589028.104 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3589988.883 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3560616.832 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3559527.772 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 3573804.870 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3565702.827 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3591395.997 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 3595850.655 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 56.67% complete, ETA 00:28:59
# Fork: 2 of 2
# Warmup Iteration   1: 243083.801 ops/s
# Warmup Iteration   2: 3346816.323 ops/s
# Warmup Iteration   3: 3578973.311 ops/s
# Warmup Iteration   4: 3567423.052 ops/s
# Warmup Iteration   5: 3566232.444 ops/s
Iteration   1: 3571243.346 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3580912.876 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3564556.275 ops/s
                 ·gc.alloc.rate:      0.237 MB/sec
                 ·gc.alloc.rate.norm: 0.081 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3581616.563 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3579902.325 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3581036.944 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 3561518.549 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3574182.957 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3579604.085 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 3568675.584 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foreachAcc":
  3577805.147 ±(99.9%) 10335.367 ops/s [Average]
  (min, avg, max) = (3559527.772, 3577805.147, 3595850.655), stdev = 11902.224
  CI (99.9%): [3567469.780, 3588140.513] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.012 ±(99.9%) 0.046 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.012, 0.237), stdev = 0.053
  CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.004 ±(99.9%) 0.016 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.004, 0.081), stdev = 0.018
  CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.foreachAcc
# Parameters: (size = 500)

# Run progress: 57.78% complete, ETA 00:28:14
# Fork: 1 of 2
# Warmup Iteration   1: 44292.146 ops/s
# Warmup Iteration   2: 651735.588 ops/s
# Warmup Iteration   3: 721121.009 ops/s
# Warmup Iteration   4: 727773.950 ops/s
# Warmup Iteration   5: 729345.127 ops/s
Iteration   1: 734666.300 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 733751.575 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 736231.478 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 735762.837 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 734119.224 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 734486.711 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 732943.751 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 734784.653 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 735787.696 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 734884.348 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 58.89% complete, ETA 00:27:30
# Fork: 2 of 2
# Warmup Iteration   1: 34831.817 ops/s
# Warmup Iteration   2: 683208.725 ops/s
# Warmup Iteration   3: 716277.179 ops/s
# Warmup Iteration   4: 725122.263 ops/s
# Warmup Iteration   5: 732063.988 ops/s
Iteration   1: 731713.425 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 732416.147 ops/s
                 ·gc.alloc.rate:      0.395 MB/sec
                 ·gc.alloc.rate.norm: 0.661 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 728957.306 ops/s
                 ·gc.alloc.rate:      5.008 MB/sec
                 ·gc.alloc.rate.norm: 8.411 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 732284.715 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 732188.036 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 732885.486 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 732539.756 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 733253.047 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 733023.415 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 731485.341 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.ListAccumulateBench.foreachAcc":
  733408.262 ±(99.9%) 1519.145 ops/s [Average]
  (min, avg, max) = (728957.306, 733408.262, 736231.478), stdev = 1749.449
  CI (99.9%): [731889.118, 734927.407] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.270 ±(99.9%) 0.971 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.270, 5.008), stdev = 1.119
  CI (99.9%): [≈ 0, 1.242] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.454 ±(99.9%) 1.631 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.454, 8.411), stdev = 1.879
  CI (99.9%): [≈ 0, 2.085] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.recursiveAcc
# Parameters: (size = 10)

# Run progress: 60.00% complete, ETA 00:26:45
# Fork: 1 of 2
# Warmup Iteration   1: 611603.835 ops/s
# Warmup Iteration   2: 8505531.405 ops/s
# Warmup Iteration   3: 11659831.707 ops/s
# Warmup Iteration   4: 12312933.020 ops/s
# Warmup Iteration   5: 12316307.096 ops/s
Iteration   1: 12899345.226 ops/s
                 ·gc.alloc.rate:                   3787.428 MB/sec
                 ·gc.alloc.rate.norm:              360.211 B/op
                 ·gc.churn.G1_Eden_Space:          3783.388 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     359.827 B/op
                 ·gc.churn.G1_Old_Gen:             0.020 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.002 B/op
                 ·gc.churn.G1_Survivor_Space:      1.138 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.108 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 13039208.276 ops/s
                 ·gc.alloc.rate:               3831.578 MB/sec
                 ·gc.alloc.rate.norm:          360.085 B/op
                 ·gc.churn.G1_Eden_Space:      3783.615 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 355.578 B/op
                 ·gc.churn.G1_Old_Gen:         0.012 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms

Iteration   3: 12742221.544 ops/s
                 ·gc.alloc.rate:               3739.287 MB/sec
                 ·gc.alloc.rate.norm:          360.024 B/op
                 ·gc.churn.G1_Eden_Space:      3785.724 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 364.495 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms

Iteration   4: 12708971.194 ops/s
                 ·gc.alloc.rate:               3738.247 MB/sec
                 ·gc.alloc.rate.norm:          360.699 B/op
                 ·gc.churn.G1_Eden_Space:      3782.693 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 364.988 B/op
                 ·gc.churn.G1_Old_Gen:         0.041 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.004 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     21.000 ms

Iteration   5: 12631706.594 ops/s
                 ·gc.alloc.rate:               3712.397 MB/sec
                 ·gc.alloc.rate.norm:          360.085 B/op
                 ·gc.churn.G1_Eden_Space:      3785.979 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 367.222 B/op
                 ·gc.churn.G1_Old_Gen:         0.057 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.006 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     23.000 ms

Iteration   6: 12336004.233 ops/s
                 ·gc.alloc.rate:               3625.919 MB/sec
                 ·gc.alloc.rate.norm:          360.018 B/op
                 ·gc.churn.G1_Eden_Space:      3492.405 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 346.761 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     20.000 ms

Iteration   7: 12558452.186 ops/s
                 ·gc.alloc.rate:               3692.461 MB/sec
                 ·gc.alloc.rate.norm:          360.655 B/op
                 ·gc.churn.G1_Eden_Space:      3781.422 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 369.345 B/op
                 ·gc.churn.G1_Old_Gen:         0.030 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.003 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     21.000 ms

Iteration   8: 12571096.098 ops/s
                 ·gc.alloc.rate:               3695.220 MB/sec
                 ·gc.alloc.rate.norm:          360.316 B/op
                 ·gc.churn.G1_Eden_Space:      3784.136 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 368.986 B/op
                 ·gc.churn.G1_Old_Gen:         0.032 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.003 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     24.000 ms

Iteration   9: 12995305.526 ops/s
                 ·gc.alloc.rate:               3815.280 MB/sec
                 ·gc.alloc.rate.norm:          360.048 B/op
                 ·gc.churn.G1_Eden_Space:      3777.337 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 356.467 B/op
                 ·gc.churn.G1_Old_Gen:         0.008 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     20.000 ms

Iteration  10: 13060775.307 ops/s
                 ·gc.alloc.rate:               3842.307 MB/sec
                 ·gc.alloc.rate.norm:          360.000 B/op
                 ·gc.churn.G1_Eden_Space:      3794.054 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 355.479 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms


# Run progress: 61.11% complete, ETA 00:26:01
# Fork: 2 of 2
# Warmup Iteration   1: 626124.386 ops/s
# Warmup Iteration   2: 9268723.887 ops/s
# Warmup Iteration   3: 12069543.267 ops/s
# Warmup Iteration   4: 12236582.287 ops/s
# Warmup Iteration   5: 12273444.208 ops/s
Iteration   1: 12178469.847 ops/s
                 ·gc.alloc.rate:                   3581.219 MB/sec
                 ·gc.alloc.rate.norm:              360.247 B/op
                 ·gc.churn.G1_Eden_Space:          3498.056 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     351.881 B/op
                 ·gc.churn.G1_Old_Gen:             0.027 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.003 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         25.000 ms

Iteration   2: 12160550.149 ops/s
                 ·gc.alloc.rate:               3579.037 MB/sec
                 ·gc.alloc.rate.norm:          360.613 B/op
                 ·gc.churn.G1_Eden_Space:      3491.354 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 351.778 B/op
                 ·gc.churn.G1_Old_Gen:         0.008 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     23.000 ms

Iteration   3: 12414957.330 ops/s
                 ·gc.alloc.rate:               3648.310 MB/sec
                 ·gc.alloc.rate.norm:          360.016 B/op
                 ·gc.churn.G1_Eden_Space:      3791.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 374.119 B/op
                 ·gc.churn.G1_Old_Gen:         0.021 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     22.000 ms

Iteration   4: 12945041.243 ops/s
                 ·gc.alloc.rate:               3802.212 MB/sec
                 ·gc.alloc.rate.norm:          360.380 B/op
                 ·gc.churn.G1_Eden_Space:      3786.627 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 358.903 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms

Iteration   5: 13071870.898 ops/s
                 ·gc.alloc.rate:               3842.771 MB/sec
                 ·gc.alloc.rate.norm:          360.035 B/op
                 ·gc.churn.G1_Eden_Space:      3791.691 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 355.250 B/op
                 ·gc.churn.G1_Old_Gen:         0.016 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     21.000 ms

Iteration   6: 13044210.272 ops/s
                 ·gc.alloc.rate:               3828.777 MB/sec
                 ·gc.alloc.rate.norm:          360.020 B/op
                 ·gc.churn.G1_Eden_Space:      3780.936 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 355.521 B/op
                 ·gc.churn.G1_Old_Gen:         0.008 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms

Iteration   7: 12492888.565 ops/s
                 ·gc.alloc.rate:               3673.266 MB/sec
                 ·gc.alloc.rate.norm:          360.285 B/op
                 ·gc.churn.G1_Eden_Space:      3781.123 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 370.864 B/op
                 ·gc.churn.G1_Old_Gen:         0.047 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.005 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     21.000 ms

Iteration   8: 12689820.305 ops/s
                 ·gc.alloc.rate:               3724.718 MB/sec
                 ·gc.alloc.rate.norm:          360.000 B/op
                 ·gc.churn.G1_Eden_Space:      3488.657 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 337.184 B/op
                 ·gc.churn.G1_Old_Gen:         0.064 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.006 B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     20.000 ms

Iteration   9: 13082023.955 ops/s
                 ·gc.alloc.rate:               3844.077 MB/sec
                 ·gc.alloc.rate.norm:          360.047 B/op
                 ·gc.churn.G1_Eden_Space:      4078.654 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 382.018 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration  10: 13056882.918 ops/s
                 ·gc.alloc.rate:               3832.570 MB/sec
                 ·gc.alloc.rate.norm:          360.002 B/op
                 ·gc.churn.G1_Eden_Space:      3777.846 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 354.861 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms



Result "bench.ListAccumulateBench.recursiveAcc":
  12733990.083 ±(99.9%) 267430.188 ops/s [Average]
  (min, avg, max) = (12160550.149, 12733990.083, 13082023.955), stdev = 307973.002
  CI (99.9%): [12466559.896, 13001420.271] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate":
  3741.854 ±(99.9%) 77.329 MB/sec [Average]
  (min, avg, max) = (3579.037, 3741.854, 3844.077), stdev = 89.052
  CI (99.9%): [3664.525, 3819.183] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  360.189 ±(99.9%) 0.202 B/op [Average]
  (min, avg, max) = (360.000, 360.189, 360.699), stdev = 0.233
  CI (99.9%): [359.987, 360.391] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  3740.846 ±(99.9%) 124.341 MB/sec [Average]
  (min, avg, max) = (3488.657, 3740.846, 4078.654), stdev = 143.191
  CI (99.9%): [3616.505, 3865.187] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  360.076 ±(99.9%) 8.952 B/op [Average]
  (min, avg, max) = (337.184, 360.076, 382.018), stdev = 10.310
  CI (99.9%): [351.124, 369.029] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.020 ±(99.9%) 0.017 MB/sec [Average]
  (min, avg, max) = (0.001, 0.020, 0.064), stdev = 0.020
  CI (99.9%): [0.003, 0.037] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  0.002 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.002, 0.006), stdev = 0.002
  CI (99.9%): [≈ 10⁻⁴, 0.004] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.071 ±(99.9%) 0.225 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.071, 1.138), stdev = 0.259
  CI (99.9%): [≈ 0, 0.296] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  0.007 ±(99.9%) 0.021 B/op [Average]
  (min, avg, max) = (≈ 0, 0.007, 0.108), stdev = 0.025
  CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.count":
  257.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (12.000, 12.850, 14.000), stdev = 0.489
  CI (99.9%): [257.000, 257.000] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.time":
  423.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 21.150, 28.000), stdev = 2.412
  CI (99.9%): [423.000, 423.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.recursiveAcc
# Parameters: (size = 100)

# Run progress: 62.22% complete, ETA 00:25:16
# Fork: 1 of 2
# Warmup Iteration   1: 55363.996 ops/s
# Warmup Iteration   2: 981203.841 ops/s
# Warmup Iteration   3: 1172514.669 ops/s
# Warmup Iteration   4: 1135654.287 ops/s
# Warmup Iteration   5: 1142838.421 ops/s
Iteration   1: 1241813.656 ops/s
                 ·gc.alloc.rate:                   4013.624 MB/sec
                 ·gc.alloc.rate.norm:              3961.019 B/op
                 ·gc.churn.G1_Eden_Space:          3787.181 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     3737.543 B/op
                 ·gc.churn.G1_Old_Gen:             0.027 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.027 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.281 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 1245230.201 ops/s
                 ·gc.alloc.rate:               4024.438 MB/sec
                 ·gc.alloc.rate.norm:          3960.538 B/op
                 ·gc.churn.G1_Eden_Space:      4075.733 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4011.018 B/op
                 ·gc.churn.G1_Old_Gen:         0.004 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.004 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   3: 1243836.741 ops/s
                 ·gc.alloc.rate:               4024.510 MB/sec
                 ·gc.alloc.rate.norm:          3960.956 B/op
                 ·gc.churn.G1_Eden_Space:      4087.389 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4022.841 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration   4: 1231536.223 ops/s
                 ·gc.alloc.rate:               3982.545 MB/sec
                 ·gc.alloc.rate.norm:          3965.149 B/op
                 ·gc.churn.G1_Eden_Space:      4068.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4051.077 B/op
                 ·gc.churn.G1_Old_Gen:         0.054 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.054 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     23.000 ms

Iteration   5: 1235779.548 ops/s
                 ·gc.alloc.rate:               3995.130 MB/sec
                 ·gc.alloc.rate.norm:          3962.162 B/op
                 ·gc.churn.G1_Eden_Space:      3782.942 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3751.725 B/op
                 ·gc.churn.G1_Old_Gen:         0.037 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.036 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     22.000 ms

Iteration   6: 1239725.570 ops/s
                 ·gc.alloc.rate:               4015.208 MB/sec
                 ·gc.alloc.rate.norm:          3961.992 B/op
                 ·gc.churn.G1_Eden_Space:      4078.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4024.318 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.003 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration   7: 1245800.985 ops/s
                 ·gc.alloc.rate:               4026.258 MB/sec
                 ·gc.alloc.rate.norm:          3960.040 B/op
                 ·gc.churn.G1_Eden_Space:      4073.629 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4006.633 B/op
                 ·gc.churn.G1_Old_Gen:         0.005 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.005 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   8: 1238478.672 ops/s
                 ·gc.alloc.rate:               3997.883 MB/sec
                 ·gc.alloc.rate.norm:          3960.453 B/op
                 ·gc.churn.G1_Eden_Space:      4076.584 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4038.417 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.003 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   9: 1248033.877 ops/s
                 ·gc.alloc.rate:               4031.441 MB/sec
                 ·gc.alloc.rate.norm:          3960.070 B/op
                 ·gc.churn.G1_Eden_Space:      4076.573 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4004.403 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration  10: 1241089.400 ops/s
                 ·gc.alloc.rate:               4008.873 MB/sec
                 ·gc.alloc.rate.norm:          3961.470 B/op
                 ·gc.churn.G1_Eden_Space:      3785.989 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3741.221 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms


# Run progress: 63.33% complete, ETA 00:24:32
# Fork: 2 of 2
# Warmup Iteration   1: 60530.392 ops/s
# Warmup Iteration   2: 763800.715 ops/s
# Warmup Iteration   3: 1188817.592 ops/s
# Warmup Iteration   4: 1071126.785 ops/s
# Warmup Iteration   5: 1153271.686 ops/s
Iteration   1: 1239852.470 ops/s
                 ·gc.alloc.rate:                   4008.889 MB/sec
                 ·gc.alloc.rate.norm:              3961.077 B/op
                 ·gc.churn.G1_Eden_Space:          3788.409 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     3743.226 B/op
                 ·gc.churn.G1_Old_Gen:             0.007 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.282 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 1240818.581 ops/s
                 ·gc.alloc.rate:               4007.229 MB/sec
                 ·gc.alloc.rate.norm:          3960.982 B/op
                 ·gc.churn.G1_Eden_Space:      4070.350 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4023.375 B/op
                 ·gc.churn.G1_Old_Gen:         0.018 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.018 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     22.000 ms

Iteration   3: 1231422.698 ops/s
                 ·gc.alloc.rate:               3986.687 MB/sec
                 ·gc.alloc.rate.norm:          3965.212 B/op
                 ·gc.churn.G1_Eden_Space:      4073.405 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4051.462 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration   4: 1233881.581 ops/s
                 ·gc.alloc.rate:               3992.842 MB/sec
                 ·gc.alloc.rate.norm:          3964.791 B/op
                 ·gc.churn.G1_Eden_Space:      3788.673 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3762.056 B/op
                 ·gc.churn.G1_Old_Gen:         0.078 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.078 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     23.000 ms

Iteration   5: 1243375.294 ops/s
                 ·gc.alloc.rate:               4018.532 MB/sec
                 ·gc.alloc.rate.norm:          3961.439 B/op
                 ·gc.churn.G1_Eden_Space:      4071.159 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4013.319 B/op
                 ·gc.churn.G1_Old_Gen:         0.063 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.062 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     22.000 ms

Iteration   6: 1240590.440 ops/s
                 ·gc.alloc.rate:               4015.416 MB/sec
                 ·gc.alloc.rate.norm:          3961.870 B/op
                 ·gc.churn.G1_Eden_Space:      4087.803 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4033.292 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration   7: 1247522.701 ops/s
                 ·gc.alloc.rate:               4032.022 MB/sec
                 ·gc.alloc.rate.norm:          3960.040 B/op
                 ·gc.churn.G1_Eden_Space:      4073.723 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4000.997 B/op
                 ·gc.churn.G1_Old_Gen:         0.005 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.005 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   8: 1245281.593 ops/s
                 ·gc.alloc.rate:               4031.457 MB/sec
                 ·gc.alloc.rate.norm:          3960.374 B/op
                 ·gc.churn.G1_Eden_Space:      4087.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4015.745 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   9: 1241984.712 ops/s
                 ·gc.alloc.rate:               4012.218 MB/sec
                 ·gc.alloc.rate.norm:          3960.217 B/op
                 ·gc.churn.G1_Eden_Space:      4080.217 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4027.335 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration  10: 1205588.805 ops/s
                 ·gc.alloc.rate:               3897.152 MB/sec
                 ·gc.alloc.rate.norm:          3960.989 B/op
                 ·gc.churn.G1_Eden_Space:      3788.119 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3850.170 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     19.000 ms



Result "bench.ListAccumulateBench.recursiveAcc":
  1239082.187 ±(99.9%) 8007.656 ops/s [Average]
  (min, avg, max) = (1205588.805, 1239082.187, 1248033.877), stdev = 9221.628
  CI (99.9%): [1231074.532, 1247089.843] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate":
  4006.118 ±(99.9%) 25.697 MB/sec [Average]
  (min, avg, max) = (3897.152, 4006.118, 4032.022), stdev = 29.593
  CI (99.9%): [3980.421, 4031.815] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  3961.542 ±(99.9%) 1.425 B/op [Average]
  (min, avg, max) = (3960.040, 3961.542, 3965.212), stdev = 1.641
  CI (99.9%): [3960.117, 3962.967] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  3990.146 ±(99.9%) 118.643 MB/sec [Average]
  (min, avg, max) = (3782.942, 3990.146, 4087.821), stdev = 136.630
  CI (99.9%): [3871.503, 4108.789] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  3945.509 ±(99.9%) 108.011 B/op [Average]
  (min, avg, max) = (3737.543, 3945.509, 4051.462), stdev = 124.385
  CI (99.9%): [3837.498, 4053.519] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.016 ±(99.9%) 0.020 MB/sec [Average]
  (min, avg, max) = (0.001, 0.016, 0.078), stdev = 0.023
  CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  0.016 ±(99.9%) 0.020 B/op [Average]
  (min, avg, max) = (0.001, 0.016, 0.078), stdev = 0.023
  CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.028 ±(99.9%) 0.076 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.028, 0.285), stdev = 0.088
  CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  0.028 ±(99.9%) 0.075 B/op [Average]
  (min, avg, max) = (≈ 0, 0.028, 0.282), stdev = 0.087
  CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.count":
  274.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 13.700, 14.000), stdev = 0.470
  CI (99.9%): [274.000, 274.000] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.time":
  421.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 21.050, 23.000), stdev = 1.234
  CI (99.9%): [421.000, 421.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.ListAccumulateBench.recursiveAcc
# Parameters: (size = 500)

# Run progress: 64.44% complete, ETA 00:23:47
# Fork: 1 of 2
# Warmup Iteration   1: 11819.373 ops/s
# Warmup Iteration   2: 182871.071 ops/s
# Warmup Iteration   3: 221321.008 ops/s
# Warmup Iteration   4: 234275.290 ops/s
# Warmup Iteration   5: 236100.954 ops/s
Iteration   1: 249586.236 ops/s
                 ·gc.alloc.rate:                   4062.717 MB/sec
                 ·gc.alloc.rate.norm:              19966.741 B/op
                 ·gc.churn.G1_Eden_Space:          4071.300 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20008.923 B/op
                 ·gc.churn.G1_Old_Gen:             0.009 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.046 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.397 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 247778.871 ops/s
                 ·gc.alloc.rate:               4043.042 MB/sec
                 ·gc.alloc.rate.norm:          19991.705 B/op
                 ·gc.churn.G1_Eden_Space:      4081.756 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 20183.135 B/op
                 ·gc.churn.G1_Old_Gen:         0.011 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.056 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     23.000 ms

Iteration   3: 245433.733 ops/s
                 ·gc.alloc.rate:               4004.511 MB/sec
                 ·gc.alloc.rate.norm:          19968.012 B/op
                 ·gc.churn.G1_Eden_Space:      4085.761 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 20373.156 B/op
                 ·gc.churn.G1_Old_Gen:         0.086 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.427 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     25.000 ms

Iteration   4: 248313.484 ops/s
                 ·gc.alloc.rate:               4047.578 MB/sec
                 ·gc.alloc.rate.norm:          19976.018 B/op
                 ·gc.churn.G1_Eden_Space:      4081.815 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 20144.988 B/op
                 ·gc.churn.G1_Old_Gen:         0.018 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.087 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   5: 253071.285 ops/s
                 ·gc.alloc.rate:               4121.297 MB/sec
                 ·gc.alloc.rate.norm:          19972.310 B/op
                 ·gc.churn.G1_Eden_Space:      4068.186 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19714.924 B/op
                 ·gc.churn.G1_Old_Gen:         0.019 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.091 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     22.000 ms

Iteration   6: 251821.574 ops/s
                 ·gc.alloc.rate:               4100.828 MB/sec
                 ·gc.alloc.rate.norm:          19975.873 B/op
                 ·gc.churn.G1_Eden_Space:      4074.123 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19845.789 B/op
                 ·gc.churn.G1_Old_Gen:         0.026 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.129 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   7: 252713.420 ops/s
                 ·gc.alloc.rate:               4111.231 MB/sec
                 ·gc.alloc.rate.norm:          19961.256 B/op
                 ·gc.churn.G1_Eden_Space:      4079.030 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19804.908 B/op
                 ·gc.churn.G1_Old_Gen:         0.036 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.174 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   8: 251881.932 ops/s
                 ·gc.alloc.rate:               4102.606 MB/sec
                 ·gc.alloc.rate.norm:          19962.112 B/op
                 ·gc.churn.G1_Eden_Space:      4071.237 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19809.480 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.015 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration   9: 252276.822 ops/s
                 ·gc.alloc.rate:               4109.297 MB/sec
                 ·gc.alloc.rate.norm:          19960.711 B/op
                 ·gc.churn.G1_Eden_Space:      4075.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19795.771 B/op
                 ·gc.churn.G1_Old_Gen:         0.001 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.006 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     20.000 ms

Iteration  10: 252949.791 ops/s
                 ·gc.alloc.rate:               4126.201 MB/sec
                 ·gc.alloc.rate.norm:          19966.659 B/op
                 ·gc.churn.G1_Eden_Space:      4377.916 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 21184.706 B/op
                 ·gc.churn.G1_Old_Gen:         0.004 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.017 B/op
                 ·gc.count:                    15.000 counts
                 ·gc.time:                     23.000 ms


# Run progress: 65.56% complete, ETA 00:23:02
# Fork: 2 of 2
# Warmup Iteration   1: 32312.056 ops/s
# Warmup Iteration   2: 190713.665 ops/s
# Warmup Iteration   3: 230860.769 ops/s
# Warmup Iteration   4: 218670.923 ops/s
# Warmup Iteration   5: 218796.130 ops/s
Iteration   1: 231993.671 ops/s
                 ·gc.alloc.rate:                   3779.503 MB/sec
                 ·gc.alloc.rate.norm:              19969.356 B/op
                 ·gc.churn.G1_Eden_Space:          3791.629 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20033.423 B/op
                 ·gc.churn.G1_Old_Gen:             0.032 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        0.167 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.506 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 251701.208 ops/s
                 ·gc.alloc.rate:               4098.224 MB/sec
                 ·gc.alloc.rate.norm:          19964.578 B/op
                 ·gc.churn.G1_Eden_Space:      4080.273 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19877.126 B/op
                 ·gc.churn.G1_Old_Gen:         0.060 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.294 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     23.000 ms

Iteration   3: 242998.687 ops/s
                 ·gc.alloc.rate:               3954.402 MB/sec
                 ·gc.alloc.rate.norm:          19964.655 B/op
                 ·gc.churn.G1_Eden_Space:      3773.951 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19053.609 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.017 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     20.000 ms

Iteration   4: 252050.019 ops/s
                 ·gc.alloc.rate:               4111.694 MB/sec
                 ·gc.alloc.rate.norm:          19975.031 B/op
                 ·gc.churn.G1_Eden_Space:      4074.397 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19793.840 B/op
                 ·gc.churn.G1_Old_Gen:         0.008 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.037 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     23.000 ms

Iteration   5: 253553.144 ops/s
                 ·gc.alloc.rate:               4129.838 MB/sec
                 ·gc.alloc.rate.norm:          19961.144 B/op
                 ·gc.churn.G1_Eden_Space:      4083.732 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19738.297 B/op
                 ·gc.churn.G1_Old_Gen:         0.004 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.020 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     22.000 ms

Iteration   6: 249040.447 ops/s
                 ·gc.alloc.rate:               4059.595 MB/sec
                 ·gc.alloc.rate.norm:          19971.527 B/op
                 ·gc.churn.G1_Eden_Space:      4081.801 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 20080.771 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.011 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration   7: 252844.700 ops/s
                 ·gc.alloc.rate:               4113.696 MB/sec
                 ·gc.alloc.rate.norm:          19960.911 B/op
                 ·gc.churn.G1_Eden_Space:      4371.062 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 21209.727 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.008 B/op
                 ·gc.count:                    15.000 counts
                 ·gc.time:                     23.000 ms

Iteration   8: 247550.711 ops/s
                 ·gc.alloc.rate:               4027.826 MB/sec
                 ·gc.alloc.rate.norm:          19961.882 B/op
                 ·gc.churn.G1_Eden_Space:      3784.860 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 18757.742 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.008 B/op
                 ·gc.count:                    13.000 counts
                 ·gc.time:                     21.000 ms

Iteration   9: 251523.457 ops/s
                 ·gc.alloc.rate:               4092.632 MB/sec
                 ·gc.alloc.rate.norm:          19960.609 B/op
                 ·gc.churn.G1_Eden_Space:      4074.027 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 19869.868 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.009 B/op
                 ·gc.count:                    14.000 counts
                 ·gc.time:                     21.000 ms

Iteration  10: 252333.192 ops/s
                 ·gc.alloc.rate:               4109.221 MB/sec
                 ·gc.alloc.rate.norm:          19972.414 B/op
                 ·gc.churn.G1_Eden_Space:      4365.564 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 21218.341 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.016 B/op
                 ·gc.count:                    15.000 counts
                 ·gc.time:                     23.000 ms



Result "bench.ListAccumulateBench.recursiveAcc":
  249570.819 ±(99.9%) 4357.295 ops/s [Average]
  (min, avg, max) = (231993.671, 249570.819, 253553.144), stdev = 5017.867
  CI (99.9%): [245213.524, 253928.114] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate":
  4065.297 ±(99.9%) 70.683 MB/sec [Average]
  (min, avg, max) = (3779.503, 4065.297, 4129.838), stdev = 81.399
  CI (99.9%): [3994.614, 4135.980] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  19968.175 ±(99.9%) 6.721 B/op [Average]
  (min, avg, max) = (19960.609, 19968.175, 19991.705), stdev = 7.740
  CI (99.9%): [19961.454, 19974.896] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  4077.388 ±(99.9%) 143.557 MB/sec [Average]
  (min, avg, max) = (3773.951, 4077.388, 4377.916), stdev = 165.320
  CI (99.9%): [3933.831, 4220.945] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  20024.926 ±(99.9%) 539.846 B/op [Average]
  (min, avg, max) = (18757.742, 20024.926, 21218.341), stdev = 621.688
  CI (99.9%): [19485.080, 20564.773] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.017 ±(99.9%) 0.019 MB/sec [Average]
  (min, avg, max) = (0.001, 0.017, 0.086), stdev = 0.022
  CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  0.082 ±(99.9%) 0.096 B/op [Average]
  (min, avg, max) = (0.006, 0.082, 0.427), stdev = 0.111
  CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.028 ±(99.9%) 0.076 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.028, 0.285), stdev = 0.088
  CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  0.145 ±(99.9%) 0.388 B/op [Average]
  (min, avg, max) = (≈ 0, 0.145, 1.506), stdev = 0.447
  CI (99.9%): [≈ 0, 0.534] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.count":
  280.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 14.000, 15.000), stdev = 0.562
  CI (99.9%): [280.000, 280.000] (assumes normal distribution)

Secondary result "bench.ListAccumulateBench.recursiveAcc:·gc.time":
  448.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (20.000, 22.400, 31.000), stdev = 2.458
  CI (99.9%): [448.000, 448.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foldLeftAcc
# Parameters: (size = 10)

# Run progress: 66.67% complete, ETA 00:22:18
# Fork: 1 of 2
# Warmup Iteration   1: 1629062.882 ops/s
# Warmup Iteration   2: 24039681.197 ops/s
# Warmup Iteration   3: 32320042.673 ops/s
# Warmup Iteration   4: 30116812.718 ops/s
# Warmup Iteration   5: 31620065.379 ops/s
Iteration   1: 32636422.518 ops/s
                 ·gc.alloc.rate:                   3199.449 MB/sec
                 ·gc.alloc.rate.norm:              120.075 B/op
                 ·gc.churn.G1_Eden_Space:          3194.990 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     119.908 B/op
                 ·gc.churn.G1_Old_Gen:             0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        ≈ 10⁻⁴ B/op
                 ·gc.churn.G1_Survivor_Space:      2.561 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.096 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         49.000 ms

Iteration   2: 32037550.504 ops/s
                 ·gc.alloc.rate:               3143.969 MB/sec
                 ·gc.alloc.rate.norm:          120.031 B/op
                 ·gc.churn.G1_Eden_Space:      3205.824 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 122.392 B/op
                 ·gc.churn.G1_Old_Gen:         0.016 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     18.000 ms

Iteration   3: 31795993.455 ops/s
                 ·gc.alloc.rate:               3116.065 MB/sec
                 ·gc.alloc.rate.norm:          120.192 B/op
                 ·gc.churn.G1_Eden_Space:      3205.706 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 123.649 B/op
                 ·gc.churn.G1_Old_Gen:         0.013 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻³ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     18.000 ms

Iteration   4: 32705895.643 ops/s
                 ·gc.alloc.rate:               3200.188 MB/sec
                 ·gc.alloc.rate.norm:          120.025 B/op
                 ·gc.churn.G1_Eden_Space:      3199.258 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 119.990 B/op
                 ·gc.churn.G1_Old_Gen:         0.010 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻³ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     18.000 ms

Iteration   5: 33150668.821 ops/s
                 ·gc.alloc.rate:               3255.774 MB/sec
                 ·gc.alloc.rate.norm:          120.183 B/op
                 ·gc.churn.G1_Eden_Space:      3208.906 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 118.453 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     17.000 ms

Iteration   6: 33479768.356 ops/s
                 ·gc.alloc.rate:               3275.014 MB/sec
                 ·gc.alloc.rate.norm:          120.001 B/op
                 ·gc.churn.G1_Eden_Space:      3206.004 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 117.472 B/op
                 ·gc.churn.G1_Old_Gen:         0.041 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     19.000 ms

Iteration   7: 33127639.236 ops/s
                 ·gc.alloc.rate:               3250.341 MB/sec
                 ·gc.alloc.rate.norm:          120.228 B/op
                 ·gc.churn.G1_Eden_Space:      3201.737 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 118.430 B/op
                 ·gc.churn.G1_Old_Gen:         0.079 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.003 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     19.000 ms

Iteration   8: 33339646.643 ops/s
                 ·gc.alloc.rate:               3263.060 MB/sec
                 ·gc.alloc.rate.norm:          120.069 B/op
                 ·gc.churn.G1_Eden_Space:      3492.657 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 128.518 B/op
                 ·gc.churn.G1_Old_Gen:         0.209 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.008 B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     22.000 ms

Iteration   9: 33136438.673 ops/s
                 ·gc.alloc.rate:               3245.273 MB/sec
                 ·gc.alloc.rate.norm:          120.006 B/op
                 ·gc.churn.G1_Eden_Space:      3204.699 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 118.506 B/op
                 ·gc.churn.G1_Old_Gen:         0.011 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻³ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     17.000 ms

Iteration  10: 33446816.901 ops/s
                 ·gc.alloc.rate:               3272.256 MB/sec
                 ·gc.alloc.rate.norm:          120.014 B/op
                 ·gc.churn.G1_Eden_Space:      3201.058 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 117.403 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     16.000 ms


# Run progress: 67.78% complete, ETA 00:21:33
# Fork: 2 of 2
# Warmup Iteration   1: 769565.810 ops/s
# Warmup Iteration   2: 26286666.118 ops/s
# Warmup Iteration   3: 29741464.409 ops/s
# Warmup Iteration   4: 31894289.239 ops/s
# Warmup Iteration   5: 30043338.320 ops/s
Iteration   1: 33140444.661 ops/s
                 ·gc.alloc.rate:                   3241.902 MB/sec
                 ·gc.alloc.rate.norm:              120.025 B/op
                 ·gc.churn.G1_Eden_Space:          3198.128 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     118.404 B/op
                 ·gc.churn.G1_Old_Gen:             0.006 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        ≈ 10⁻⁴ B/op
                 ·gc.churn.G1_Survivor_Space:      2.563 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.095 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         47.000 ms

Iteration   2: 33112805.920 ops/s
                 ·gc.alloc.rate:               3245.095 MB/sec
                 ·gc.alloc.rate.norm:          120.206 B/op
                 ·gc.churn.G1_Eden_Space:      3198.517 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 118.481 B/op
                 ·gc.churn.G1_Old_Gen:         0.009 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻³ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     19.000 ms

Iteration   3: 33385708.689 ops/s
                 ·gc.alloc.rate:               3270.126 MB/sec
                 ·gc.alloc.rate.norm:          120.064 B/op
                 ·gc.churn.G1_Eden_Space:      3490.393 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 128.151 B/op
                 ·gc.churn.G1_Old_Gen:         0.050 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     20.000 ms

Iteration   4: 33412179.508 ops/s
                 ·gc.alloc.rate:               3270.601 MB/sec
                 ·gc.alloc.rate.norm:          120.033 B/op
                 ·gc.churn.G1_Eden_Space:      3196.729 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 117.322 B/op
                 ·gc.churn.G1_Old_Gen:         0.044 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     17.000 ms

Iteration   5: 33499113.954 ops/s
                 ·gc.alloc.rate:               3282.057 MB/sec
                 ·gc.alloc.rate.norm:          120.107 B/op
                 ·gc.churn.G1_Eden_Space:      3204.966 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 117.285 B/op
                 ·gc.churn.G1_Old_Gen:         0.004 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     17.000 ms

Iteration   6: 33238062.882 ops/s
                 ·gc.alloc.rate:               3257.399 MB/sec
                 ·gc.alloc.rate.norm:          120.000 B/op
                 ·gc.churn.G1_Eden_Space:      3209.101 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 118.221 B/op
                 ·gc.churn.G1_Old_Gen:         0.002 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     16.000 ms

Iteration   7: 33333457.135 ops/s
                 ·gc.alloc.rate:               3261.959 MB/sec
                 ·gc.alloc.rate.norm:          120.061 B/op
                 ·gc.churn.G1_Eden_Space:      3494.845 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 128.632 B/op
                 ·gc.churn.G1_Old_Gen:         0.008 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    12.000 counts
                 ·gc.time:                     18.000 ms

Iteration   8: 32933604.086 ops/s
                 ·gc.alloc.rate:               3234.154 MB/sec
                 ·gc.alloc.rate.norm:          120.290 B/op
                 ·gc.churn.G1_Eden_Space:      3200.789 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 119.049 B/op
                 ·gc.churn.G1_Old_Gen:         0.049 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.002 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     19.000 ms

Iteration   9: 33610124.851 ops/s
                 ·gc.alloc.rate:               3292.440 MB/sec
                 ·gc.alloc.rate.norm:          120.003 B/op
                 ·gc.churn.G1_Eden_Space:      3209.333 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 116.974 B/op
                 ·gc.churn.G1_Old_Gen:         0.040 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.001 B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     19.000 ms

Iteration  10: 33558159.923 ops/s
                 ·gc.alloc.rate:               3284.689 MB/sec
                 ·gc.alloc.rate.norm:          120.049 B/op
                 ·gc.churn.G1_Eden_Space:      3198.078 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 116.883 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    ≈ 10⁻⁴ B/op
                 ·gc.count:                    11.000 counts
                 ·gc.time:                     17.000 ms



Result "bench.SetAccumulateBench.foldLeftAcc":
  33104025.118 ±(99.9%) 419643.008 ops/s [Average]
  (min, avg, max) = (31795993.455, 33104025.118, 33610124.851), stdev = 483261.512
  CI (99.9%): [32684382.110, 33523668.126] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  3243.090 ±(99.9%) 39.848 MB/sec [Average]
  (min, avg, max) = (3116.065, 3243.090, 3292.440), stdev = 45.889
  CI (99.9%): [3203.242, 3282.939] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  120.083 ±(99.9%) 0.076 B/op [Average]
  (min, avg, max) = (120.000, 120.083, 120.290), stdev = 0.088
  CI (99.9%): [120.007, 120.159] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space":
  3246.086 ±(99.9%) 92.346 MB/sec [Average]
  (min, avg, max) = (3194.990, 3246.086, 3494.845), stdev = 106.346
  CI (99.9%): [3153.739, 3338.432] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm":
  120.206 ±(99.9%) 3.417 B/op [Average]
  (min, avg, max) = (116.883, 120.206, 128.632), stdev = 3.935
  CI (99.9%): [116.789, 123.624] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Old_Gen":
  0.030 ±(99.9%) 0.041 MB/sec [Average]
  (min, avg, max) = (0.002, 0.030, 0.209), stdev = 0.048
  CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Old_Gen.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.008), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space":
  0.256 ±(99.9%) 0.685 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.256, 2.563), stdev = 0.789
  CI (99.9%): [≈ 0, 0.941] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm":
  0.010 ±(99.9%) 0.026 B/op [Average]
  (min, avg, max) = (≈ 0, 0.010, 0.096), stdev = 0.029
  CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.count":
  223.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 11.150, 12.000), stdev = 0.366
  CI (99.9%): [223.000, 223.000] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.time":
  422.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 21.100, 49.000), stdev = 9.313
  CI (99.9%): [422.000, 422.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foldLeftAcc
# Parameters: (size = 100)

# Run progress: 68.89% complete, ETA 00:20:48
# Fork: 1 of 2
# Warmup Iteration   1: 61072.877 ops/s
# Warmup Iteration   2: 1189398.076 ops/s
# Warmup Iteration   3: 1556646.640 ops/s
# Warmup Iteration   4: 1500990.010 ops/s
# Warmup Iteration   5: 1576001.884 ops/s
Iteration   1: 1578809.513 ops/s
                 ·gc.alloc.rate:               228.773 MB/sec
                 ·gc.alloc.rate.norm:          177.256 B/op
                 ·gc.churn.G1_Eden_Space:      289.384 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 224.218 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   2: 1595857.314 ops/s
                 ·gc.alloc.rate:      230.142 MB/sec
                 ·gc.alloc.rate.norm: 176.804 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1591702.923 ops/s
                 ·gc.alloc.rate:                   228.584 MB/sec
                 ·gc.alloc.rate.norm:              176.069 B/op
                 ·gc.churn.G1_Eden_Space:          288.781 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     222.435 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.220 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         14.000 ms

Iteration   4: 1543599.707 ops/s
                 ·gc.alloc.rate:               222.748 MB/sec
                 ·gc.alloc.rate.norm:          176.581 B/op
                 ·gc.churn.G1_Eden_Space:      288.689 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 228.855 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   5: 1585082.512 ops/s
                 ·gc.alloc.rate:               227.967 MB/sec
                 ·gc.alloc.rate.norm:          176.401 B/op
                 ·gc.churn.G1_Eden_Space:      288.176 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 222.991 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   6: 1584450.930 ops/s
                 ·gc.alloc.rate:               228.285 MB/sec
                 ·gc.alloc.rate.norm:          176.217 B/op
                 ·gc.churn.G1_Eden_Space:      288.620 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 222.791 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   7: 1601174.332 ops/s
                 ·gc.alloc.rate:      230.139 MB/sec
                 ·gc.alloc.rate.norm: 176.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 1592828.873 ops/s
                 ·gc.alloc.rate:               228.944 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.739 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 221.967 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   9: 1586260.862 ops/s
                 ·gc.alloc.rate:               229.748 MB/sec
                 ·gc.alloc.rate.norm:          177.574 B/op
                 ·gc.churn.G1_Eden_Space:      288.404 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 222.909 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration  10: 1594199.529 ops/s
                 ·gc.alloc.rate:               228.807 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.052 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 221.572 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     15.000 ms


# Run progress: 70.00% complete, ETA 00:20:04
# Fork: 2 of 2
# Warmup Iteration   1: 65753.572 ops/s
# Warmup Iteration   2: 1195886.477 ops/s
# Warmup Iteration   3: 1496153.330 ops/s
# Warmup Iteration   4: 1588151.711 ops/s
# Warmup Iteration   5: 1573749.350 ops/s
Iteration   1: 1592922.925 ops/s
                 ·gc.alloc.rate:               228.643 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.494 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 222.071 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   2: 1596966.853 ops/s
                 ·gc.alloc.rate:      229.171 MB/sec
                 ·gc.alloc.rate.norm: 176.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1591308.137 ops/s
                 ·gc.alloc.rate:                   228.446 MB/sec
                 ·gc.alloc.rate.norm:              176.090 B/op
                 ·gc.churn.G1_Eden_Space:          288.166 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     222.123 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.219 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 1582056.881 ops/s
                 ·gc.alloc.rate:               227.399 MB/sec
                 ·gc.alloc.rate.norm:          176.151 B/op
                 ·gc.churn.G1_Eden_Space:      289.037 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 223.899 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   5: 1592696.563 ops/s
                 ·gc.alloc.rate:                   228.861 MB/sec
                 ·gc.alloc.rate.norm:              176.000 B/op
                 ·gc.churn.G1_Eden_Space:          288.119 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     221.571 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.219 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         14.000 ms

Iteration   6: 1580420.799 ops/s
                 ·gc.alloc.rate:               228.057 MB/sec
                 ·gc.alloc.rate.norm:          176.974 B/op
                 ·gc.churn.G1_Eden_Space:      288.472 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 223.856 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   7: 1597508.930 ops/s
                 ·gc.alloc.rate:      229.598 MB/sec
                 ·gc.alloc.rate.norm: 176.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 1576113.450 ops/s
                 ·gc.alloc.rate:               226.420 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      289.097 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 224.720 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   9: 1573428.640 ops/s
                 ·gc.alloc.rate:               226.007 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.685 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 224.810 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration  10: 1586389.904 ops/s
                 ·gc.alloc.rate:               227.635 MB/sec
                 ·gc.alloc.rate.norm:          176.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.214 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 222.837 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms



Result "bench.SetAccumulateBench.foldLeftAcc":
  1586188.979 ±(99.9%) 10915.400 ops/s [Average]
  (min, avg, max) = (1543599.707, 1586188.979, 1601174.332), stdev = 12570.191
  CI (99.9%): [1575273.579, 1597104.379] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  228.219 ±(99.9%) 1.459 MB/sec [Average]
  (min, avg, max) = (222.748, 228.219, 230.142), stdev = 1.680
  CI (99.9%): [226.759, 229.678] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  176.306 ±(99.9%) 0.416 B/op [Average]
  (min, avg, max) = (176.000, 176.306, 177.574), stdev = 0.479
  CI (99.9%): [175.890, 176.722] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space":
  230.856 ±(99.9%) 102.837 MB/sec [Average]
  (min, avg, max) = (≈ 0, 230.856, 289.384), stdev = 118.427
  CI (99.9%): [128.019, 333.693] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm":
  178.681 ±(99.9%) 79.607 B/op [Average]
  (min, avg, max) = (≈ 0, 178.681, 228.855), stdev = 91.676
  CI (99.9%): [99.074, 258.288] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space":
  0.043 ±(99.9%) 0.091 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.043, 0.285), stdev = 0.104
  CI (99.9%): [≈ 0, 0.133] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm":
  0.033 ±(99.9%) 0.070 B/op [Average]
  (min, avg, max) = (≈ 0, 0.033, 0.220), stdev = 0.080
  CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.count":
  16.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.410
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.time":
  214.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 10.700, 15.000), stdev = 5.516
  CI (99.9%): [214.000, 214.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foldLeftAcc
# Parameters: (size = 500)

# Run progress: 71.11% complete, ETA 00:19:19
# Fork: 1 of 2
# Warmup Iteration   1: 12803.852 ops/s
# Warmup Iteration   2: 251020.838 ops/s
# Warmup Iteration   3: 319483.386 ops/s
# Warmup Iteration   4: 331815.812 ops/s
# Warmup Iteration   5: 332617.005 ops/s
Iteration   1: 334051.486 ops/s
                 ·gc.alloc.rate:      47.947 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 332921.087 ops/s
                 ·gc.alloc.rate:      49.014 MB/sec
                 ·gc.alloc.rate.norm: 180.469 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 335174.117 ops/s
                 ·gc.alloc.rate:      48.113 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 333188.698 ops/s
                 ·gc.alloc.rate:               47.848 MB/sec
                 ·gc.alloc.rate.norm:          176.001 B/op
                 ·gc.churn.G1_Eden_Space:      289.119 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1063.472 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     15.000 ms

Iteration   5: 335490.062 ops/s
                 ·gc.alloc.rate:      48.222 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 335646.435 ops/s
                 ·gc.alloc.rate:      48.171 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 335731.825 ops/s
                 ·gc.alloc.rate:      48.285 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 334728.110 ops/s
                 ·gc.alloc.rate:      48.145 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 335364.916 ops/s
                 ·gc.alloc.rate:      48.163 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 334228.154 ops/s
                 ·gc.alloc.rate:               48.161 MB/sec
                 ·gc.alloc.rate.norm:          176.422 B/op
                 ·gc.churn.G1_Eden_Space:      288.694 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1057.533 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms


# Run progress: 72.22% complete, ETA 00:18:35
# Fork: 2 of 2
# Warmup Iteration   1: 11102.480 ops/s
# Warmup Iteration   2: 236923.239 ops/s
# Warmup Iteration   3: 299036.433 ops/s
# Warmup Iteration   4: 291036.296 ops/s
# Warmup Iteration   5: 299723.958 ops/s
Iteration   1: 299782.022 ops/s
                 ·gc.alloc.rate:      43.038 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 299105.304 ops/s
                 ·gc.alloc.rate:      44.436 MB/sec
                 ·gc.alloc.rate.norm: 182.079 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 299340.668 ops/s
                 ·gc.alloc.rate:      43.466 MB/sec
                 ·gc.alloc.rate.norm: 178.161 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 308175.683 ops/s
                 ·gc.alloc.rate:               44.241 MB/sec
                 ·gc.alloc.rate.norm:          176.001 B/op
                 ·gc.churn.G1_Eden_Space:      289.079 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1150.026 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     16.000 ms

Iteration   5: 333254.059 ops/s
                 ·gc.alloc.rate:      47.837 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 332915.872 ops/s
                 ·gc.alloc.rate:      47.824 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 334251.708 ops/s
                 ·gc.alloc.rate:      48.005 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 334237.151 ops/s
                 ·gc.alloc.rate:      47.962 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 335660.857 ops/s
                 ·gc.alloc.rate:      48.188 MB/sec
                 ·gc.alloc.rate.norm: 176.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 333126.057 ops/s
                 ·gc.alloc.rate:                   47.903 MB/sec
                 ·gc.alloc.rate.norm:              176.309 B/op
                 ·gc.churn.G1_Eden_Space:          287.818 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1059.335 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.046 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         14.000 ms



Result "bench.SetAccumulateBench.foldLeftAcc":
  327818.714 ±(99.9%) 11804.970 ops/s [Average]
  (min, avg, max) = (299105.304, 327818.714, 335731.825), stdev = 13594.621
  CI (99.9%): [316013.743, 339623.684] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  47.248 ±(99.9%) 1.570 MB/sec [Average]
  (min, avg, max) = (43.038, 47.248, 49.014), stdev = 1.808
  CI (99.9%): [45.678, 48.819] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  176.672 ±(99.9%) 1.448 B/op [Average]
  (min, avg, max) = (176.001, 176.672, 182.079), stdev = 1.668
  CI (99.9%): [175.224, 178.120] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space":
  57.735 ±(99.9%) 102.875 MB/sec [Average]
  (min, avg, max) = (≈ 0, 57.735, 289.119), stdev = 118.471
  CI (99.9%): [≈ 0, 160.610] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm":
  216.518 ±(99.9%) 386.111 B/op [Average]
  (min, avg, max) = (≈ 0, 216.518, 1150.026), stdev = 444.646
  CI (99.9%): [≈ 0, 602.629] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space":
  0.014 ±(99.9%) 0.055 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.014, 0.284), stdev = 0.064
  CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm":
  0.052 ±(99.9%) 0.203 B/op [Average]
  (min, avg, max) = (≈ 0, 0.052, 1.046), stdev = 0.234
  CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.410
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foldLeftAcc:·gc.time":
  58.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 2.900, 16.000), stdev = 5.973
  CI (99.9%): [58.000, 58.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foreachAcc
# Parameters: (size = 10)

# Run progress: 73.33% complete, ETA 00:17:50
# Fork: 1 of 2
# Warmup Iteration   1: 2341911.117 ops/s
# Warmup Iteration   2: 55664053.179 ops/s
# Warmup Iteration   3: 64613975.086 ops/s
# Warmup Iteration   4: 64516080.860 ops/s
# Warmup Iteration   5: 64352402.220 ops/s
Iteration   1: 64724179.945 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 64669249.870 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 64630468.977 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 64449131.090 ops/s
                 ·gc.alloc.rate:      0.131 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 64636235.016 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 64804666.350 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 64584265.113 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 64770273.236 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 64795235.802 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 64698604.781 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 74.44% complete, ETA 00:17:05
# Fork: 2 of 2
# Warmup Iteration   1: 5098393.605 ops/s
# Warmup Iteration   2: 53395481.210 ops/s
# Warmup Iteration   3: 64719038.917 ops/s
# Warmup Iteration   4: 64756534.726 ops/s
# Warmup Iteration   5: 64718843.936 ops/s
Iteration   1: 64592117.813 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 64715473.670 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 64375131.861 ops/s
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 64713424.209 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 64708132.947 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 63708559.811 ops/s
                 ·gc.alloc.rate:      0.651 MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 64553002.432 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 64671813.863 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 64435393.234 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 64590250.241 ops/s
                 ·gc.alloc.rate:      0.400 MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.SetAccumulateBench.foreachAcc":
  64591280.513 ±(99.9%) 207068.996 ops/s [Average]
  (min, avg, max) = (63708559.811, 64591280.513, 64804666.350), stdev = 238460.964
  CI (99.9%): [64384211.517, 64798349.509] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.063 ±(99.9%) 0.145 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.063, 0.651), stdev = 0.167
  CI (99.9%): [≈ 0, 0.208] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.001, 0.013), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foreachAcc
# Parameters: (size = 100)

# Run progress: 75.56% complete, ETA 00:16:21
# Fork: 1 of 2
# Warmup Iteration   1: 258284.599 ops/s
# Warmup Iteration   2: 2516685.848 ops/s
# Warmup Iteration   3: 3127249.435 ops/s
# Warmup Iteration   4: 3130725.553 ops/s
# Warmup Iteration   5: 3100197.490 ops/s
Iteration   1: 3129433.366 ops/s
                 ·gc.alloc.rate:      81.842 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3097494.083 ops/s
                 ·gc.alloc.rate:               83.952 MB/sec
                 ·gc.alloc.rate.norm:          33.218 B/op
                 ·gc.churn.G1_Eden_Space:      288.824 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 114.281 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     15.000 ms

Iteration   3: 3152190.017 ops/s
                 ·gc.alloc.rate:      82.289 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3095944.430 ops/s
                 ·gc.alloc.rate:      80.926 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3156427.463 ops/s
                 ·gc.alloc.rate:      82.474 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3131228.298 ops/s
                 ·gc.alloc.rate:               81.928 MB/sec
                 ·gc.alloc.rate.norm:          32.089 B/op
                 ·gc.churn.G1_Eden_Space:      288.242 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 112.897 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   7: 3156414.100 ops/s
                 ·gc.alloc.rate:      82.347 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3155152.038 ops/s
                 ·gc.alloc.rate:      82.520 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3119563.730 ops/s
                 ·gc.alloc.rate:                   81.440 MB/sec
                 ·gc.alloc.rate.norm:              32.029 B/op
                 ·gc.churn.G1_Eden_Space:          288.396 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     113.421 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.112 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         13.000 ms

Iteration  10: 3149788.184 ops/s
                 ·gc.alloc.rate:      82.188 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.67% complete, ETA 00:15:36
# Fork: 2 of 2
# Warmup Iteration   1: 145556.742 ops/s
# Warmup Iteration   2: 2382395.907 ops/s
# Warmup Iteration   3: 3126875.144 ops/s
# Warmup Iteration   4: 3125734.822 ops/s
# Warmup Iteration   5: 3080095.780 ops/s
Iteration   1: 3129628.764 ops/s
                 ·gc.alloc.rate:      81.621 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3103584.407 ops/s
                 ·gc.alloc.rate:               81.832 MB/sec
                 ·gc.alloc.rate.norm:          32.338 B/op
                 ·gc.churn.G1_Eden_Space:      288.903 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 114.167 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     16.000 ms

Iteration   3: 3124826.732 ops/s
                 ·gc.alloc.rate:      81.516 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3144435.068 ops/s
                 ·gc.alloc.rate:      82.272 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3157273.235 ops/s
                 ·gc.alloc.rate:      82.397 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 3107481.653 ops/s
                 ·gc.alloc.rate:               84.396 MB/sec
                 ·gc.alloc.rate.norm:          33.294 B/op
                 ·gc.churn.G1_Eden_Space:      288.446 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 113.792 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   7: 3142522.955 ops/s
                 ·gc.alloc.rate:      81.966 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 3124457.255 ops/s
                 ·gc.alloc.rate:      84.569 MB/sec
                 ·gc.alloc.rate.norm: 33.188 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 3133805.334 ops/s
                 ·gc.alloc.rate:                   81.952 MB/sec
                 ·gc.alloc.rate.norm:              32.036 B/op
                 ·gc.churn.G1_Eden_Space:          288.351 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     112.721 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.111 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         14.000 ms

Iteration  10: 3155935.237 ops/s
                 ·gc.alloc.rate:      82.494 MB/sec
                 ·gc.alloc.rate.norm: 32.011 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.SetAccumulateBench.foreachAcc":
  3133379.317 ±(99.9%) 17896.184 ops/s [Average]
  (min, avg, max) = (3095944.430, 3133379.317, 3157273.235), stdev = 20609.272
  CI (99.9%): [3115483.133, 3151275.502] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate":
  82.346 ±(99.9%) 0.818 MB/sec [Average]
  (min, avg, max) = (80.926, 82.346, 84.569), stdev = 0.942
  CI (99.9%): [81.528, 83.164] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  32.210 ±(99.9%) 0.389 B/op [Average]
  (min, avg, max) = (32.000, 32.210, 33.294), stdev = 0.448
  CI (99.9%): [31.821, 32.599] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space":
  86.558 ±(99.9%) 117.796 MB/sec [Average]
  (min, avg, max) = (≈ 0, 86.558, 288.903), stdev = 135.654
  CI (99.9%): [≈ 0, 204.354] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm":
  34.064 ±(99.9%) 46.358 B/op [Average]
  (min, avg, max) = (≈ 0, 34.064, 114.281), stdev = 53.386
  CI (99.9%): [≈ 0, 80.422] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space":
  0.028 ±(99.9%) 0.076 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.028, 0.285), stdev = 0.088
  CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space.norm":
  0.011 ±(99.9%) 0.030 B/op [Average]
  (min, avg, max) = (≈ 0, 0.011, 0.112), stdev = 0.034
  CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.count":
  6.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.300, 1.000), stdev = 0.470
  CI (99.9%): [6.000, 6.000] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.time":
  85.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 4.250, 16.000), stdev = 6.688
  CI (99.9%): [85.000, 85.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.SetAccumulateBench.foreachAcc
# Parameters: (size = 500)

# Run progress: 77.78% complete, ETA 00:14:52
# Fork: 1 of 2
# Warmup Iteration   1: 30786.084 ops/s
# Warmup Iteration   2: 572359.123 ops/s
# Warmup Iteration   3: 741137.569 ops/s
# Warmup Iteration   4: 788148.505 ops/s
# Warmup Iteration   5: 784326.707 ops/s
Iteration   1: 787240.823 ops/s
                 ·gc.alloc.rate:      20.581 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 786679.329 ops/s
                 ·gc.alloc.rate:      21.253 MB/sec
                 ·gc.alloc.rate.norm: 33.117 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 796260.032 ops/s
                 ·gc.alloc.rate:      21.235 MB/sec
                 ·gc.alloc.rate.norm: 32.707 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 791266.469 ops/s
                 ·gc.alloc.rate:      20.661 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 775869.263 ops/s
                 ·gc.alloc.rate:      20.271 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 797188.878 ops/s
                 ·gc.alloc.rate:      20.833 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 796739.367 ops/s
                 ·gc.alloc.rate:      20.822 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 798073.704 ops/s
                 ·gc.alloc.rate:      20.835 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 796798.148 ops/s
                 ·gc.alloc.rate:      20.798 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 791202.159 ops/s
                 ·gc.alloc.rate:               20.668 MB/sec
                 ·gc.alloc.rate.norm:          32.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.975 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 447.415 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     16.000 ms


# Run progress: 78.89% complete, ETA 00:14:07
# Fork: 2 of 2
# Warmup Iteration   1: 58063.880 ops/s
# Warmup Iteration   2: 499844.199 ops/s
# Warmup Iteration   3: 560760.765 ops/s
# Warmup Iteration   4: 610694.518 ops/s
# Warmup Iteration   5: 609363.895 ops/s
Iteration   1: 611845.866 ops/s
                 ·gc.alloc.rate:      16.221 MB/sec
                 ·gc.alloc.rate.norm: 32.518 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 612223.473 ops/s
                 ·gc.alloc.rate:      16.910 MB/sec
                 ·gc.alloc.rate.norm: 33.845 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 611918.109 ops/s
                 ·gc.alloc.rate:      15.974 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 610648.529 ops/s
                 ·gc.alloc.rate:      15.946 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 609658.313 ops/s
                 ·gc.alloc.rate:      15.934 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 611903.955 ops/s
                 ·gc.alloc.rate:      15.974 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 610794.546 ops/s
                 ·gc.alloc.rate:      16.024 MB/sec
                 ·gc.alloc.rate.norm: 32.108 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 611674.920 ops/s
                 ·gc.alloc.rate:      15.963 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 606036.267 ops/s
                 ·gc.alloc.rate:      15.813 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 610680.494 ops/s
                 ·gc.alloc.rate:      15.942 MB/sec
                 ·gc.alloc.rate.norm: 32.000 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.SetAccumulateBench.foreachAcc":
  701235.132 ±(99.9%) 80740.248 ops/s [Average]
  (min, avg, max) = (606036.267, 701235.132, 798073.704), stdev = 92980.590
  CI (99.9%): [620494.884, 781975.380] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate":
  18.433 ±(99.9%) 2.120 MB/sec [Average]
  (min, avg, max) = (15.813, 18.433, 21.253), stdev = 2.442
  CI (99.9%): [16.312, 20.553] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  32.215 ±(99.9%) 0.423 B/op [Average]
  (min, avg, max) = (32.000, 32.215, 33.845), stdev = 0.487
  CI (99.9%): [31.792, 32.638] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space":
  14.449 ±(99.9%) 56.110 MB/sec [Average]
  (min, avg, max) = (≈ 0, 14.449, 288.975), stdev = 64.617
  CI (99.9%): [≈ 0, 70.559] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm":
  22.371 ±(99.9%) 86.875 B/op [Average]
  (min, avg, max) = (≈ 0, 22.371, 447.415), stdev = 100.045
  CI (99.9%): [≈ 0, 109.245] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.050, 1.000), stdev = 0.224
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "bench.SetAccumulateBench.foreachAcc:·gc.time":
  16.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.800, 16.000), stdev = 3.578
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foldLeftAcc
# Parameters: (size = 10)

# Run progress: 80.00% complete, ETA 00:13:22
# Fork: 1 of 2
# Warmup Iteration   1: 1939483.072 ops/s
# Warmup Iteration   2: 39303649.627 ops/s
# Warmup Iteration   3: 50316602.815 ops/s
# Warmup Iteration   4: 50107015.262 ops/s
# Warmup Iteration   5: 50397201.814 ops/s
Iteration   1: 50226218.881 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 50411452.208 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 50414174.531 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 50316997.179 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 50282247.913 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 50407078.422 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 50361564.212 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 50383489.929 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 50259663.761 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 50000635.177 ops/s
                 ·gc.alloc.rate:      3.010 MB/sec
                 ·gc.alloc.rate.norm: 0.074 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 81.11% complete, ETA 00:12:38
# Fork: 2 of 2
# Warmup Iteration   1: 1908870.109 ops/s
# Warmup Iteration   2: 37819178.620 ops/s
# Warmup Iteration   3: 50335985.029 ops/s
# Warmup Iteration   4: 50315426.470 ops/s
# Warmup Iteration   5: 50031719.660 ops/s
Iteration   1: 50016872.292 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 50270759.305 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 50413756.664 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 50338074.562 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 50320518.080 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 50216617.650 ops/s
                 ·gc.alloc.rate:      1.032 MB/sec
                 ·gc.alloc.rate.norm: 0.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 50342333.764 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 50287257.163 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 50341577.039 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 50365178.232 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foldLeftAcc":
  50298823.348 ±(99.9%) 100728.856 ops/s [Average]
  (min, avg, max) = (50000635.177, 50298823.348, 50414174.531), stdev = 115999.500
  CI (99.9%): [50198094.493, 50399552.204] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  0.202 ±(99.9%) 0.608 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.202, 3.010), stdev = 0.700
  CI (99.9%): [≈ 0, 0.810] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  0.005 ±(99.9%) 0.015 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁶, 0.005, 0.074), stdev = 0.017
  CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foldLeftAcc
# Parameters: (size = 100)

# Run progress: 82.22% complete, ETA 00:11:53
# Fork: 1 of 2
# Warmup Iteration   1: 263896.866 ops/s
# Warmup Iteration   2: 3125007.083 ops/s
# Warmup Iteration   3: 4244136.775 ops/s
# Warmup Iteration   4: 4237463.818 ops/s
# Warmup Iteration   5: 4148174.892 ops/s
Iteration   1: 4248966.930 ops/s
                 ·gc.alloc.rate:      222.055 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4215134.268 ops/s
                 ·gc.alloc.rate:                   225.385 MB/sec
                 ·gc.alloc.rate.norm:              65.459 B/op
                 ·gc.churn.G1_Eden_Space:          288.456 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.777 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.083 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         13.000 ms

Iteration   3: 4205326.956 ops/s
                 ·gc.alloc.rate:               220.857 MB/sec
                 ·gc.alloc.rate.norm:          64.295 B/op
                 ·gc.churn.G1_Eden_Space:      288.777 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 84.068 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   4: 4246876.106 ops/s
                 ·gc.alloc.rate:               221.819 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.355 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.197 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   5: 4219046.220 ops/s
                 ·gc.alloc.rate:               220.329 MB/sec
                 ·gc.alloc.rate.norm:          64.038 B/op
                 ·gc.churn.G1_Eden_Space:      288.203 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.765 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   6: 4228613.888 ops/s
                 ·gc.alloc.rate:      221.083 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4242523.632 ops/s
                 ·gc.alloc.rate:               221.828 MB/sec
                 ·gc.alloc.rate.norm:          64.112 B/op
                 ·gc.churn.G1_Eden_Space:      288.504 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.383 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   8: 4250998.007 ops/s
                 ·gc.alloc.rate:               221.887 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.092 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.096 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   9: 4253660.830 ops/s
                 ·gc.alloc.rate:               222.770 MB/sec
                 ·gc.alloc.rate.norm:          64.112 B/op
                 ·gc.churn.G1_Eden_Space:      288.564 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.047 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration  10: 4261309.079 ops/s
                 ·gc.alloc.rate:      222.414 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 83.33% complete, ETA 00:11:09
# Fork: 2 of 2
# Warmup Iteration   1: 256198.246 ops/s
# Warmup Iteration   2: 3224511.027 ops/s
# Warmup Iteration   3: 4243858.824 ops/s
# Warmup Iteration   4: 4244992.516 ops/s
# Warmup Iteration   5: 4156795.627 ops/s
Iteration   1: 4269737.727 ops/s
                 ·gc.alloc.rate:      223.183 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4243144.857 ops/s
                 ·gc.alloc.rate:               221.662 MB/sec
                 ·gc.alloc.rate.norm:          64.029 B/op
                 ·gc.churn.G1_Eden_Space:      288.190 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.246 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   3: 4164541.083 ops/s
                 ·gc.alloc.rate:                   226.434 MB/sec
                 ·gc.alloc.rate.norm:              66.668 B/op
                 ·gc.churn.G1_Eden_Space:          288.236 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     84.865 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.084 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 4254756.772 ops/s
                 ·gc.alloc.rate:                   222.570 MB/sec
                 ·gc.alloc.rate.norm:              64.000 B/op
                 ·gc.churn.G1_Eden_Space:          288.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.068 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.082 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 4253764.227 ops/s
                 ·gc.alloc.rate:      222.360 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4231770.119 ops/s
                 ·gc.alloc.rate:               221.191 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.930 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.600 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     17.000 ms

Iteration   7: 4251120.581 ops/s
                 ·gc.alloc.rate:               222.306 MB/sec
                 ·gc.alloc.rate.norm:          64.119 B/op
                 ·gc.churn.G1_Eden_Space:      288.456 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.198 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   8: 4247654.712 ops/s
                 ·gc.alloc.rate:               222.075 MB/sec
                 ·gc.alloc.rate.norm:          64.116 B/op
                 ·gc.churn.G1_Eden_Space:      288.033 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.159 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   9: 4251124.589 ops/s
                 ·gc.alloc.rate:               222.187 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.756 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.175 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration  10: 4239293.686 ops/s
                 ·gc.alloc.rate:      221.280 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foldLeftAcc":
  4238968.213 ±(99.9%) 20542.658 ops/s [Average]
  (min, avg, max) = (4164541.083, 4238968.213, 4269737.727), stdev = 23656.955
  CI (99.9%): [4218425.556, 4259510.871] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  222.284 ±(99.9%) 1.237 MB/sec [Average]
  (min, avg, max) = (220.329, 222.284, 226.434), stdev = 1.425
  CI (99.9%): [221.047, 223.521] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  64.247 ±(99.9%) 0.569 B/op [Average]
  (min, avg, max) = (64.000, 64.247, 66.668), stdev = 0.656
  CI (99.9%): [63.678, 64.817] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space":
  201.922 ±(99.9%) 117.769 MB/sec [Average]
  (min, avg, max) = (≈ 0, 201.922, 288.930), stdev = 135.623
  CI (99.9%): [84.153, 319.691] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm":
  58.432 ±(99.9%) 34.082 B/op [Average]
  (min, avg, max) = (≈ 0, 58.432, 84.865), stdev = 39.249
  CI (99.9%): [24.350, 92.514] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space":
  0.043 ±(99.9%) 0.091 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.043, 0.285), stdev = 0.104
  CI (99.9%): [≈ 0, 0.133] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm":
  0.012 ±(99.9%) 0.026 B/op [Average]
  (min, avg, max) = (≈ 0, 0.012, 0.084), stdev = 0.030
  CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.count":
  14.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.700, 1.000), stdev = 0.470
  CI (99.9%): [14.000, 14.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.time":
  187.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 9.350, 17.000), stdev = 6.343
  CI (99.9%): [187.000, 187.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foldLeftAcc
# Parameters: (size = 500)

# Run progress: 84.44% complete, ETA 00:10:24
# Fork: 1 of 2
# Warmup Iteration   1: 52211.521 ops/s
# Warmup Iteration   2: 692767.311 ops/s
# Warmup Iteration   3: 828692.435 ops/s
# Warmup Iteration   4: 860083.180 ops/s
# Warmup Iteration   5: 870879.498 ops/s
Iteration   1: 871677.654 ops/s
                 ·gc.alloc.rate:      45.532 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 869538.492 ops/s
                 ·gc.alloc.rate:      46.002 MB/sec
                 ·gc.alloc.rate.norm: 64.865 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 870445.441 ops/s
                 ·gc.alloc.rate:      45.421 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 866550.976 ops/s
                 ·gc.alloc.rate:               45.297 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      289.144 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 408.536 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   5: 872021.560 ops/s
                 ·gc.alloc.rate:      45.516 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 869434.335 ops/s
                 ·gc.alloc.rate:      45.497 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 871674.875 ops/s
                 ·gc.alloc.rate:      45.468 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 870713.754 ops/s
                 ·gc.alloc.rate:      45.496 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 872117.167 ops/s
                 ·gc.alloc.rate:      45.563 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 866225.309 ops/s
                 ·gc.alloc.rate:      45.240 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 85.56% complete, ETA 00:09:39
# Fork: 2 of 2
# Warmup Iteration   1: 46425.302 ops/s
# Warmup Iteration   2: 766412.062 ops/s
# Warmup Iteration   3: 823599.736 ops/s
# Warmup Iteration   4: 870021.760 ops/s
# Warmup Iteration   5: 870640.599 ops/s
Iteration   1: 863612.800 ops/s
                 ·gc.alloc.rate:      45.092 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 869009.246 ops/s
                 ·gc.alloc.rate:      45.851 MB/sec
                 ·gc.alloc.rate.norm: 64.633 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 867202.761 ops/s
                 ·gc.alloc.rate:      45.352 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 851024.786 ops/s
                 ·gc.alloc.rate:               44.524 MB/sec
                 ·gc.alloc.rate.norm:          64.049 B/op
                 ·gc.churn.G1_Eden_Space:      290.064 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 417.267 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     18.000 ms

Iteration   5: 869522.983 ops/s
                 ·gc.alloc.rate:      45.411 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 865174.702 ops/s
                 ·gc.alloc.rate:      45.193 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 868757.413 ops/s
                 ·gc.alloc.rate:      45.335 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 864945.129 ops/s
                 ·gc.alloc.rate:      45.141 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 860853.963 ops/s
                 ·gc.alloc.rate:      44.945 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 871502.457 ops/s
                 ·gc.alloc.rate:      45.527 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foldLeftAcc":
  867600.290 ±(99.9%) 4330.691 ops/s [Average]
  (min, avg, max) = (851024.786, 867600.290, 872117.167), stdev = 4987.231
  CI (99.9%): [863269.599, 871930.982] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate":
  45.370 ±(99.9%) 0.272 MB/sec [Average]
  (min, avg, max) = (44.524, 45.370, 46.002), stdev = 0.313
  CI (99.9%): [45.098, 45.642] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm":
  64.078 ±(99.9%) 0.202 B/op [Average]
  (min, avg, max) = (64.000, 64.078, 64.865), stdev = 0.233
  CI (99.9%): [63.875, 64.280] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space":
  28.960 ±(99.9%) 77.404 MB/sec [Average]
  (min, avg, max) = (≈ 0, 28.960, 290.064), stdev = 89.138
  CI (99.9%): [≈ 0, 106.364] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm":
  41.290 ±(99.9%) 110.365 B/op [Average]
  (min, avg, max) = (≈ 0, 41.290, 417.267), stdev = 127.096
  CI (99.9%): [≈ 0, 151.655] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.100, 1.000), stdev = 0.308
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foldLeftAcc:·gc.time":
  32.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.600, 18.000), stdev = 4.967
  CI (99.9%): [32.000, 32.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foreachAcc
# Parameters: (size = 10)

# Run progress: 86.67% complete, ETA 00:08:55
# Fork: 1 of 2
# Warmup Iteration   1: 1814189.152 ops/s
# Warmup Iteration   2: 42253732.547 ops/s
# Warmup Iteration   3: 50336319.599 ops/s
# Warmup Iteration   4: 50143437.103 ops/s
# Warmup Iteration   5: 50345792.972 ops/s
Iteration   1: 50371155.721 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 50315128.605 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 50409634.873 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 50261713.049 ops/s
                 ·gc.alloc.rate:      0.404 MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 50387611.512 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 50288350.518 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 50410040.390 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 50347177.329 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 50239247.765 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 50199471.083 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.78% complete, ETA 00:08:10
# Fork: 2 of 2
# Warmup Iteration   1: 1909784.672 ops/s
# Warmup Iteration   2: 41771827.182 ops/s
# Warmup Iteration   3: 50712057.115 ops/s
# Warmup Iteration   4: 50847733.402 ops/s
# Warmup Iteration   5: 50968673.615 ops/s
Iteration   1: 50933193.837 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 51038255.451 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 50910707.850 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 50248951.940 ops/s
                 ·gc.alloc.rate:      4.103 MB/sec
                 ·gc.alloc.rate.norm: 0.100 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 51043332.481 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 50819622.068 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 50702095.183 ops/s
                 ·gc.alloc.rate:      0.014 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 51020119.708 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 50998460.542 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 50677360.430 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foreachAcc":
  50581081.517 ±(99.9%) 276697.493 ops/s [Average]
  (min, avg, max) = (50199471.083, 50581081.517, 51043332.481), stdev = 318645.245
  CI (99.9%): [50304384.023, 50857779.010] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate":
  0.226 ±(99.9%) 0.796 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.226, 4.103), stdev = 0.917
  CI (99.9%): [≈ 0, 1.022] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  0.006 ±(99.9%) 0.019 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.006, 0.100), stdev = 0.022
  CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foreachAcc
# Parameters: (size = 100)

# Run progress: 88.89% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 278795.585 ops/s
# Warmup Iteration   2: 3646360.397 ops/s
# Warmup Iteration   3: 4249170.433 ops/s
# Warmup Iteration   4: 4238709.957 ops/s
# Warmup Iteration   5: 4163856.964 ops/s
Iteration   1: 4269239.078 ops/s
                 ·gc.alloc.rate:      222.853 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4195055.118 ops/s
                 ·gc.alloc.rate:               224.049 MB/sec
                 ·gc.alloc.rate.norm:          65.434 B/op
                 ·gc.churn.G1_Eden_Space:      288.353 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 84.214 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     12.000 ms

Iteration   3: 4247160.915 ops/s
                 ·gc.alloc.rate:               222.351 MB/sec
                 ·gc.alloc.rate.norm:          64.030 B/op
                 ·gc.churn.G1_Eden_Space:      289.012 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.227 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   4: 4254436.014 ops/s
                 ·gc.alloc.rate:               222.078 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.098 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.026 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     12.000 ms

Iteration   5: 4247302.629 ops/s
                 ·gc.alloc.rate:               222.157 MB/sec
                 ·gc.alloc.rate.norm:          64.134 B/op
                 ·gc.churn.G1_Eden_Space:      288.993 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.428 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   6: 4264027.896 ops/s
                 ·gc.alloc.rate:      222.427 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 4243985.993 ops/s
                 ·gc.alloc.rate:               222.479 MB/sec
                 ·gc.alloc.rate.norm:          64.305 B/op
                 ·gc.churn.G1_Eden_Space:      288.408 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.362 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   8: 4223084.303 ops/s
                 ·gc.alloc.rate:                   223.799 MB/sec
                 ·gc.alloc.rate.norm:              64.843 B/op
                 ·gc.churn.G1_Eden_Space:          288.452 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.575 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.083 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         14.000 ms

Iteration   9: 4229289.659 ops/s
                 ·gc.alloc.rate:               220.701 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.096 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.544 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration  10: 4230389.709 ops/s
                 ·gc.alloc.rate:      220.868 MB/sec
                 ·gc.alloc.rate.norm: 64.022 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.00% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: 253064.037 ops/s
# Warmup Iteration   2: 3542153.457 ops/s
# Warmup Iteration   3: 4173927.708 ops/s
# Warmup Iteration   4: 4214066.459 ops/s
# Warmup Iteration   5: 4161728.317 ops/s
Iteration   1: 4265090.260 ops/s
                 ·gc.alloc.rate:      222.908 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 4224563.552 ops/s
                 ·gc.alloc.rate:               220.765 MB/sec
                 ·gc.alloc.rate.norm:          64.034 B/op
                 ·gc.churn.G1_Eden_Space:      288.543 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.693 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   3: 4178503.007 ops/s
                 ·gc.alloc.rate:                   222.838 MB/sec
                 ·gc.alloc.rate.norm:              65.344 B/op
                 ·gc.churn.G1_Eden_Space:          288.578 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     84.621 B/op
                 ·gc.churn.G1_Survivor_Space:      0.570 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.167 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         12.000 ms

Iteration   4: 4245575.000 ops/s
                 ·gc.alloc.rate:               222.019 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.929 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.288 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   5: 4257265.168 ops/s
                 ·gc.alloc.rate:      222.156 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 4227602.035 ops/s
                 ·gc.alloc.rate:                   221.248 MB/sec
                 ·gc.alloc.rate.norm:              64.196 B/op
                 ·gc.churn.G1_Eden_Space:          287.986 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.560 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.082 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         12.000 ms

Iteration   7: 4247456.860 ops/s
                 ·gc.alloc.rate:               222.226 MB/sec
                 ·gc.alloc.rate.norm:          64.081 B/op
                 ·gc.churn.G1_Eden_Space:      288.527 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.200 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration   8: 4244562.717 ops/s
                 ·gc.alloc.rate:               222.626 MB/sec
                 ·gc.alloc.rate.norm:          64.355 B/op
                 ·gc.churn.G1_Eden_Space:      288.831 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.494 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     14.000 ms

Iteration   9: 4247929.394 ops/s
                 ·gc.alloc.rate:               222.194 MB/sec
                 ·gc.alloc.rate.norm:          64.000 B/op
                 ·gc.churn.G1_Eden_Space:      288.742 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 83.168 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     13.000 ms

Iteration  10: 4266709.922 ops/s
                 ·gc.alloc.rate:      223.053 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foreachAcc":
  4240461.461 ±(99.9%) 20174.275 ops/s [Average]
  (min, avg, max) = (4178503.007, 4240461.461, 4269239.078), stdev = 23232.725
  CI (99.9%): [4220287.187, 4260635.736] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate":
  222.290 ±(99.9%) 0.778 MB/sec [Average]
  (min, avg, max) = (220.701, 222.290, 224.049), stdev = 0.896
  CI (99.9%): [221.512, 223.068] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  64.239 ±(99.9%) 0.384 B/op [Average]
  (min, avg, max) = (64.000, 64.239, 65.434), stdev = 0.442
  CI (99.9%): [63.855, 64.623] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space":
  201.977 ±(99.9%) 117.802 MB/sec [Average]
  (min, avg, max) = (≈ 0, 201.977, 289.012), stdev = 135.660
  CI (99.9%): [84.176, 319.779] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm":
  58.470 ±(99.9%) 34.103 B/op [Average]
  (min, avg, max) = (≈ 0, 58.470, 84.621), stdev = 39.274
  CI (99.9%): [24.367, 92.573] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space":
  0.057 ±(99.9%) 0.129 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.057, 0.570), stdev = 0.149
  CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space.norm":
  0.017 ±(99.9%) 0.038 B/op [Average]
  (min, avg, max) = (≈ 0, 0.017, 0.167), stdev = 0.044
  CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.count":
  14.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.700, 1.000), stdev = 0.470
  CI (99.9%): [14.000, 14.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.time":
  182.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 9.100, 14.000), stdev = 6.146
  CI (99.9%): [182.000, 182.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.foreachAcc
# Parameters: (size = 500)

# Run progress: 91.11% complete, ETA 00:05:56
# Fork: 1 of 2
# Warmup Iteration   1: 52096.255 ops/s
# Warmup Iteration   2: 707277.526 ops/s
# Warmup Iteration   3: 822764.618 ops/s
# Warmup Iteration   4: 867626.434 ops/s
# Warmup Iteration   5: 871046.745 ops/s
Iteration   1: 869716.724 ops/s
                 ·gc.alloc.rate:      45.428 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 868601.098 ops/s
                 ·gc.alloc.rate:      45.356 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 871267.837 ops/s
                 ·gc.alloc.rate:      45.577 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 864148.015 ops/s
                 ·gc.alloc.rate:               45.275 MB/sec
                 ·gc.alloc.rate.norm:          64.169 B/op
                 ·gc.churn.G1_Eden_Space:      289.109 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 409.755 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     15.000 ms

Iteration   5: 872611.894 ops/s
                 ·gc.alloc.rate:      45.582 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 862285.268 ops/s
                 ·gc.alloc.rate:      45.068 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 856900.776 ops/s
                 ·gc.alloc.rate:      44.836 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 858937.016 ops/s
                 ·gc.alloc.rate:      44.802 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 870705.349 ops/s
                 ·gc.alloc.rate:      45.553 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 872621.119 ops/s
                 ·gc.alloc.rate:      45.560 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 92.22% complete, ETA 00:05:12
# Fork: 2 of 2
# Warmup Iteration   1: 80284.517 ops/s
# Warmup Iteration   2: 733260.030 ops/s
# Warmup Iteration   3: 798721.964 ops/s
# Warmup Iteration   4: 858073.112 ops/s
# Warmup Iteration   5: 865784.248 ops/s
Iteration   1: 863992.099 ops/s
                 ·gc.alloc.rate:      45.081 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 863677.770 ops/s
                 ·gc.alloc.rate:      45.155 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 870480.754 ops/s
                 ·gc.alloc.rate:      45.417 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 864009.819 ops/s
                 ·gc.alloc.rate:               45.168 MB/sec
                 ·gc.alloc.rate.norm:          64.049 B/op
                 ·gc.churn.G1_Eden_Space:      289.830 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 410.983 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     15.000 ms

Iteration   5: 873117.168 ops/s
                 ·gc.alloc.rate:      45.646 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 867377.652 ops/s
                 ·gc.alloc.rate:      45.257 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 865148.339 ops/s
                 ·gc.alloc.rate:      49.594 MB/sec
                 ·gc.alloc.rate.norm: 70.276 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 869921.799 ops/s
                 ·gc.alloc.rate:      46.387 MB/sec
                 ·gc.alloc.rate.norm: 65.371 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 869876.017 ops/s
                 ·gc.alloc.rate:      45.382 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 863336.030 ops/s
                 ·gc.alloc.rate:      45.108 MB/sec
                 ·gc.alloc.rate.norm: 64.000 B/op
                 ·gc.count:           ≈ 0 counts



Result "bench.VectorAccumulateBench.foreachAcc":
  866936.627 ±(99.9%) 4056.510 ops/s [Average]
  (min, avg, max) = (856900.776, 866936.627, 873117.168), stdev = 4671.483
  CI (99.9%): [862880.117, 870993.137] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate":
  45.562 ±(99.9%) 0.876 MB/sec [Average]
  (min, avg, max) = (44.802, 45.562, 49.594), stdev = 1.009
  CI (99.9%): [44.686, 46.438] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm":
  64.393 ±(99.9%) 1.231 B/op [Average]
  (min, avg, max) = (64.000, 64.393, 70.276), stdev = 1.418
  CI (99.9%): [63.162, 65.625] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space":
  28.947 ±(99.9%) 77.368 MB/sec [Average]
  (min, avg, max) = (≈ 0, 28.947, 289.830), stdev = 89.097
  CI (99.9%): [≈ 0, 106.315] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm":
  41.037 ±(99.9%) 109.681 B/op [Average]
  (min, avg, max) = (≈ 0, 41.037, 410.983), stdev = 126.309
  CI (99.9%): [≈ 0, 150.718] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.100, 1.000), stdev = 0.308
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.foreachAcc:·gc.time":
  30.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.500, 15.000), stdev = 4.617
  CI (99.9%): [30.000, 30.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.recursiveAcc
# Parameters: (size = 10)

# Run progress: 93.33% complete, ETA 00:04:27
# Fork: 1 of 2
# Warmup Iteration   1: 118430.564 ops/s
# Warmup Iteration   2: 359634.784 ops/s
# Warmup Iteration   3: 464086.992 ops/s
# Warmup Iteration   4: 446107.461 ops/s
# Warmup Iteration   5: 456378.868 ops/s
Iteration   1: 456065.721 ops/s
                 ·gc.alloc.rate:                   730.694 MB/sec
                 ·gc.alloc.rate.norm:              1965.037 B/op
                 ·gc.churn.G1_Eden_Space:          864.618 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2325.194 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.764 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         40.000 ms

Iteration   2: 459463.170 ops/s
                 ·gc.alloc.rate:                   735.856 MB/sec
                 ·gc.alloc.rate.norm:              1961.299 B/op
                 ·gc.churn.G1_Eden_Space:          578.787 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1542.659 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.761 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 457107.294 ops/s
                 ·gc.alloc.rate:                   732.308 MB/sec
                 ·gc.alloc.rate.norm:              1964.445 B/op
                 ·gc.churn.G1_Eden_Space:          865.038 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2320.496 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.762 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         40.000 ms

Iteration   4: 458313.109 ops/s
                 ·gc.alloc.rate:                   734.609 MB/sec
                 ·gc.alloc.rate.norm:              1961.182 B/op
                 ·gc.churn.G1_Eden_Space:          577.607 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1542.035 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.760 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 454528.327 ops/s
                 ·gc.alloc.rate:                   728.080 MB/sec
                 ·gc.alloc.rate.norm:              1961.609 B/op
                 ·gc.churn.G1_Eden_Space:          867.054 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2336.036 B/op
                 ·gc.churn.G1_Survivor_Space:      2.276 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6.131 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         35.000 ms

Iteration   6: 459657.536 ops/s
                 ·gc.alloc.rate:                   735.318 MB/sec
                 ·gc.alloc.rate.norm:              1961.072 B/op
                 ·gc.churn.G1_Eden_Space:          581.381 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1550.524 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.759 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   7: 459598.401 ops/s
                 ·gc.alloc.rate:               734.710 MB/sec
                 ·gc.alloc.rate.norm:          1961.079 B/op
                 ·gc.churn.G1_Eden_Space:      873.013 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2330.236 B/op
                 ·gc.churn.G1_Old_Gen:         0.007 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.019 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration   8: 460616.603 ops/s
                 ·gc.alloc.rate:               737.089 MB/sec
                 ·gc.alloc.rate.norm:          1960.000 B/op
                 ·gc.churn.G1_Eden_Space:      582.143 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1547.981 B/op
                 ·gc.churn.G1_Old_Gen:         0.012 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.031 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   9: 459515.718 ops/s
                 ·gc.alloc.rate:               735.949 MB/sec
                 ·gc.alloc.rate.norm:          1960.934 B/op
                 ·gc.churn.G1_Eden_Space:      873.589 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2327.676 B/op
                 ·gc.churn.G1_Old_Gen:         0.009 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.024 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration  10: 460749.036 ops/s
                 ·gc.alloc.rate:               736.283 MB/sec
                 ·gc.alloc.rate.norm:          1960.049 B/op
                 ·gc.churn.G1_Eden_Space:      581.632 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1548.357 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms


# Run progress: 94.44% complete, ETA 00:03:43
# Fork: 2 of 2
# Warmup Iteration   1: 123257.769 ops/s
# Warmup Iteration   2: 358048.906 ops/s
# Warmup Iteration   3: 462653.425 ops/s
# Warmup Iteration   4: 440197.044 ops/s
# Warmup Iteration   5: 454476.946 ops/s
Iteration   1: 455375.257 ops/s
                 ·gc.alloc.rate:               728.906 MB/sec
                 ·gc.alloc.rate.norm:          1961.401 B/op
                 ·gc.churn.G1_Eden_Space:      867.475 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2334.273 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     39.000 ms

Iteration   2: 452209.587 ops/s
                 ·gc.alloc.rate:                   723.289 MB/sec
                 ·gc.alloc.rate.norm:              1960.257 B/op
                 ·gc.churn.G1_Eden_Space:          576.451 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1562.296 B/op
                 ·gc.churn.G1_Survivor_Space:      0.569 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.541 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 444907.342 ops/s
                 ·gc.alloc.rate:               718.060 MB/sec
                 ·gc.alloc.rate.norm:          1979.459 B/op
                 ·gc.churn.G1_Eden_Space:      864.611 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2383.451 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     39.000 ms

Iteration   4: 454091.874 ops/s
                 ·gc.alloc.rate:                   728.010 MB/sec
                 ·gc.alloc.rate.norm:              1960.931 B/op
                 ·gc.churn.G1_Eden_Space:          578.028 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1556.948 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.768 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 450676.839 ops/s
                 ·gc.alloc.rate:                   721.196 MB/sec
                 ·gc.alloc.rate.norm:              1960.675 B/op
                 ·gc.churn.G1_Eden_Space:          866.718 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2356.297 B/op
                 ·gc.churn.G1_Survivor_Space:      2.276 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6.187 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         34.000 ms

Iteration   6: 456214.928 ops/s
                 ·gc.alloc.rate:                   728.976 MB/sec
                 ·gc.alloc.rate.norm:              1960.274 B/op
                 ·gc.churn.G1_Eden_Space:          581.738 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1564.340 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.765 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         5.000 ms

Iteration   7: 453591.337 ops/s
                 ·gc.alloc.rate:               725.199 MB/sec
                 ·gc.alloc.rate.norm:          1960.812 B/op
                 ·gc.churn.G1_Eden_Space:      871.828 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2357.272 B/op
                 ·gc.churn.G1_Old_Gen:         0.011 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.029 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration   8: 456296.717 ops/s
                 ·gc.alloc.rate:               729.711 MB/sec
                 ·gc.alloc.rate.norm:          1961.574 B/op
                 ·gc.churn.G1_Eden_Space:      582.304 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1565.322 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   9: 454537.396 ops/s
                 ·gc.alloc.rate:               726.385 MB/sec
                 ·gc.alloc.rate.norm:          1960.534 B/op
                 ·gc.churn.G1_Eden_Space:      873.512 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2357.633 B/op
                 ·gc.churn.G1_Old_Gen:         0.018 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.049 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     6.000 ms

Iteration  10: 456839.153 ops/s
                 ·gc.alloc.rate:               730.656 MB/sec
                 ·gc.alloc.rate.norm:          1960.250 B/op
                 ·gc.churn.G1_Eden_Space:      581.578 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 1560.295 B/op
                 ·gc.churn.G1_Old_Gen:         0.009 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.024 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms



Result "bench.VectorAccumulateBench.recursiveAcc":
  456017.767 ±(99.9%) 3344.476 ops/s [Average]
  (min, avg, max) = (444907.342, 456017.767, 460749.036), stdev = 3851.504
  CI (99.9%): [452673.291, 459362.243] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  730.064 ±(99.9%) 4.665 MB/sec [Average]
  (min, avg, max) = (718.060, 730.064, 737.089), stdev = 5.373
  CI (99.9%): [725.399, 734.730] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  1962.144 ±(99.9%) 3.714 B/op [Average]
  (min, avg, max) = (1960.000, 1962.144, 1979.459), stdev = 4.277
  CI (99.9%): [1958.429, 1965.858] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  724.455 ±(99.9%) 128.577 MB/sec [Average]
  (min, avg, max) = (576.451, 724.455, 873.589), stdev = 148.070
  CI (99.9%): [595.878, 853.032] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  1948.466 ±(99.9%) 351.610 B/op [Average]
  (min, avg, max) = (1542.035, 1948.466, 2383.451), stdev = 404.914
  CI (99.9%): [1596.856, 2300.076] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.003 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.003, 0.018), stdev = 0.006
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  0.009 ±(99.9%) 0.013 B/op [Average]
  (min, avg, max) = (≈ 0, 0.009, 0.049), stdev = 0.015
  CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.356 ±(99.9%) 0.588 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.356, 2.276), stdev = 0.677
  CI (99.9%): [≈ 0, 0.944] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  0.960 ±(99.9%) 1.592 B/op [Average]
  (min, avg, max) = (≈ 0, 0.960, 6.187), stdev = 1.834
  CI (99.9%): [≈ 0, 2.552] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.count":
  50.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.500, 3.000), stdev = 0.513
  CI (99.9%): [50.000, 50.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.time":
  378.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (3.000, 18.900, 40.000), stdev = 15.468
  CI (99.9%): [378.000, 378.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.recursiveAcc
# Parameters: (size = 100)

# Run progress: 95.56% complete, ETA 00:02:58
# Fork: 1 of 2
# Warmup Iteration   1: 6352.914 ops/s
# Warmup Iteration   2: 24179.640 ops/s
# Warmup Iteration   3: 27725.438 ops/s
# Warmup Iteration   4: 28204.301 ops/s
# Warmup Iteration   5: 27574.186 ops/s
Iteration   1: 27869.537 ops/s
                 ·gc.alloc.rate:                   759.068 MB/sec
                 ·gc.alloc.rate.norm:              33406.053 B/op
                 ·gc.churn.G1_Eden_Space:          864.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     38056.996 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12.515 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 27691.737 ops/s
                 ·gc.alloc.rate:                   753.724 MB/sec
                 ·gc.alloc.rate.norm:              33380.227 B/op
                 ·gc.churn.G1_Eden_Space:          865.377 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     38325.036 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12.603 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         44.000 ms

Iteration   3: 27917.568 ops/s
                 ·gc.alloc.rate:               758.946 MB/sec
                 ·gc.alloc.rate.norm:          33352.006 B/op
                 ·gc.churn.G1_Eden_Space:      577.338 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25371.196 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     27.000 ms

Iteration   4: 27710.866 ops/s
                 ·gc.alloc.rate:               756.298 MB/sec
                 ·gc.alloc.rate.norm:          33391.098 B/op
                 ·gc.churn.G1_Eden_Space:      868.816 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38358.846 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     39.000 ms

Iteration   5: 27747.988 ops/s
                 ·gc.alloc.rate:                   761.060 MB/sec
                 ·gc.alloc.rate.norm:              33561.239 B/op
                 ·gc.churn.G1_Eden_Space:          579.028 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25533.975 B/op
                 ·gc.churn.G1_Survivor_Space:      2.279 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 100.478 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         21.000 ms

Iteration   6: 27804.159 ops/s
                 ·gc.alloc.rate:                   757.672 MB/sec
                 ·gc.alloc.rate.norm:              33359.336 B/op
                 ·gc.churn.G1_Eden_Space:          875.394 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     38542.457 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12.567 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         6.000 ms

Iteration   7: 27743.852 ops/s
                 ·gc.alloc.rate:               754.833 MB/sec
                 ·gc.alloc.rate.norm:          33365.269 B/op
                 ·gc.churn.G1_Eden_Space:      871.911 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38540.339 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration   8: 27976.038 ops/s
                 ·gc.alloc.rate:               762.420 MB/sec
                 ·gc.alloc.rate.norm:          33352.006 B/op
                 ·gc.churn.G1_Eden_Space:      582.591 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25485.400 B/op
                 ·gc.churn.G1_Old_Gen:         0.013 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.557 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   9: 28138.317 ops/s
                 ·gc.alloc.rate:               765.937 MB/sec
                 ·gc.alloc.rate.norm:          33352.922 B/op
                 ·gc.churn.G1_Eden_Space:      872.967 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38013.605 B/op
                 ·gc.churn.G1_Old_Gen:         0.010 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.425 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration  10: 28116.397 ops/s
                 ·gc.alloc.rate:               766.171 MB/sec
                 ·gc.alloc.rate.norm:          33355.091 B/op
                 ·gc.churn.G1_Eden_Space:      583.186 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25388.889 B/op
                 ·gc.churn.G1_Old_Gen:         0.012 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.515 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms


# Run progress: 96.67% complete, ETA 00:02:13
# Fork: 2 of 2
# Warmup Iteration   1: 8375.012 ops/s
# Warmup Iteration   2: 21500.833 ops/s
# Warmup Iteration   3: 28234.379 ops/s
# Warmup Iteration   4: 26894.083 ops/s
# Warmup Iteration   5: 27486.859 ops/s
Iteration   1: 27803.754 ops/s
                 ·gc.alloc.rate:                   762.131 MB/sec
                 ·gc.alloc.rate.norm:              33546.243 B/op
                 ·gc.churn.G1_Eden_Space:          866.067 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     38121.147 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12.536 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 27965.094 ops/s
                 ·gc.alloc.rate:               763.709 MB/sec
                 ·gc.alloc.rate.norm:          33426.228 B/op
                 ·gc.churn.G1_Eden_Space:      864.083 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 37819.452 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     41.000 ms

Iteration   3: 27941.611 ops/s
                 ·gc.alloc.rate:               760.308 MB/sec
                 ·gc.alloc.rate.norm:          33352.006 B/op
                 ·gc.churn.G1_Eden_Space:      578.008 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25355.163 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     27.000 ms

Iteration   4: 27699.470 ops/s
                 ·gc.alloc.rate:               753.426 MB/sec
                 ·gc.alloc.rate.norm:          33367.293 B/op
                 ·gc.churn.G1_Eden_Space:      865.895 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38348.239 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     41.000 ms

Iteration   5: 27916.428 ops/s
                 ·gc.alloc.rate:                   760.574 MB/sec
                 ·gc.alloc.rate.norm:              33386.355 B/op
                 ·gc.churn.G1_Eden_Space:          579.404 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25433.679 B/op
                 ·gc.churn.G1_Survivor_Space:      2.281 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 100.133 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         22.000 ms

Iteration   6: 28037.643 ops/s
                 ·gc.alloc.rate:                   764.492 MB/sec
                 ·gc.alloc.rate.norm:              33394.034 B/op
                 ·gc.churn.G1_Eden_Space:          872.536 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     38113.542 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12.427 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         7.000 ms

Iteration   7: 27926.563 ops/s
                 ·gc.alloc.rate:               761.092 MB/sec
                 ·gc.alloc.rate.norm:          33369.877 B/op
                 ·gc.churn.G1_Eden_Space:      873.121 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38281.762 B/op
                 ·gc.churn.G1_Old_Gen:         0.025 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    1.104 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     6.000 ms

Iteration   8: 28087.328 ops/s
                 ·gc.alloc.rate:               765.471 MB/sec
                 ·gc.alloc.rate.norm:          33352.006 B/op
                 ·gc.churn.G1_Eden_Space:      582.680 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25387.687 B/op
                 ·gc.churn.G1_Old_Gen:         ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.015 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   9: 27841.735 ops/s
                 ·gc.alloc.rate:               758.443 MB/sec
                 ·gc.alloc.rate.norm:          33352.006 B/op
                 ·gc.churn.G1_Eden_Space:      873.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 38399.615 B/op
                 ·gc.churn.G1_Old_Gen:         0.021 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.923 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration  10: 28130.901 ops/s
                 ·gc.alloc.rate:               766.939 MB/sec
                 ·gc.alloc.rate.norm:          33356.004 B/op
                 ·gc.churn.G1_Eden_Space:      584.481 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 25420.476 B/op
                 ·gc.churn.G1_Old_Gen:         0.011 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.463 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms



Result "bench.VectorAccumulateBench.recursiveAcc":
  27903.349 ±(99.9%) 128.088 ops/s [Average]
  (min, avg, max) = (27691.737, 27903.349, 28138.317), stdev = 147.506
  CI (99.9%): [27775.261, 28031.437] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  760.636 ±(99.9%) 3.582 MB/sec [Average]
  (min, avg, max) = (753.426, 760.636, 766.939), stdev = 4.125
  CI (99.9%): [757.054, 764.217] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  33388.865 ±(99.9%) 52.270 B/op [Average]
  (min, avg, max) = (33352.006, 33388.865, 33561.239), stdev = 60.195
  CI (99.9%): [33336.595, 33441.135] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  754.043 ±(99.9%) 126.030 MB/sec [Average]
  (min, avg, max) = (577.338, 754.043, 875.394), stdev = 145.136
  CI (99.9%): [628.013, 880.073] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  33114.875 ±(99.9%) 5597.959 B/op [Average]
  (min, avg, max) = (25355.163, 33114.875, 38542.457), stdev = 6446.618
  CI (99.9%): [27516.916, 38712.834] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.005 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.008
  CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  0.200 ±(99.9%) 0.298 B/op [Average]
  (min, avg, max) = (≈ 0, 0.200, 1.104), stdev = 0.343
  CI (99.9%): [≈ 0, 0.498] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.299 ±(99.9%) 0.598 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.299, 2.281), stdev = 0.689
  CI (99.9%): [≈ 0, 0.897] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  13.163 ±(99.9%) 26.310 B/op [Average]
  (min, avg, max) = (≈ 0, 13.163, 100.478), stdev = 30.299
  CI (99.9%): [≈ 0, 39.473] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.count":
  52.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.503
  CI (99.9%): [52.000, 52.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.time":
  388.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (3.000, 19.400, 44.000), stdev = 16.162
  CI (99.9%): [388.000, 388.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, GraalVM 1.0.0-rc9, 25.192-b12-jvmci-0.49
# *** WARNING: JMH support for this VM is experimental. Be extra careful with the produced data.
# VM invoker: /Library/Java/JavaVirtualMachines/graalvm-ce-1.0.0-rc9/Contents/Home/jre/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bench.VectorAccumulateBench.recursiveAcc
# Parameters: (size = 500)

# Run progress: 97.78% complete, ETA 00:01:29
# Fork: 1 of 2
# Warmup Iteration   1: 1557.455 ops/s
# Warmup Iteration   2: 3783.555 ops/s
# Warmup Iteration   3: 5176.539 ops/s
# Warmup Iteration   4: 5113.254 ops/s
# Warmup Iteration   5: 5012.964 ops/s
Iteration   1: 5139.356 ops/s
                 ·gc.alloc.rate:                   781.810 MB/sec
                 ·gc.alloc.rate.norm:              186611.816 B/op
                 ·gc.churn.G1_Eden_Space:          865.061 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     206483.171 B/op
                 ·gc.churn.G1_Survivor_Space:      0.284 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 67.900 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 5143.914 ops/s
                 ·gc.alloc.rate:               781.467 MB/sec
                 ·gc.alloc.rate.norm:          186376.033 B/op
                 ·gc.churn.G1_Eden_Space:      866.285 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 206604.585 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     38.000 ms

Iteration   3: 5106.887 ops/s
                 ·gc.alloc.rate:               778.886 MB/sec
                 ·gc.alloc.rate.norm:          186865.834 B/op
                 ·gc.churn.G1_Eden_Space:      576.759 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 138372.731 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     27.000 ms

Iteration   4: 5039.499 ops/s
                 ·gc.alloc.rate:               766.017 MB/sec
                 ·gc.alloc.rate.norm:          186487.187 B/op
                 ·gc.churn.G1_Eden_Space:      866.041 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 210838.006 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     39.000 ms

Iteration   5: 5101.256 ops/s
                 ·gc.alloc.rate:                   776.434 MB/sec
                 ·gc.alloc.rate.norm:              186674.289 B/op
                 ·gc.churn.G1_Eden_Space:          868.402 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     208785.745 B/op
                 ·gc.churn.G1_Survivor_Space:      2.274 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 546.738 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         23.000 ms

Iteration   6: 5131.430 ops/s
                 ·gc.alloc.rate:                   785.759 MB/sec
                 ·gc.alloc.rate.norm:              187338.907 B/op
                 ·gc.churn.G1_Eden_Space:          584.066 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     139251.764 B/op
                 ·gc.churn.G1_Old_Gen:             0.018 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        4.371 B/op
                 ·gc.churn.G1_Survivor_Space:      0.286 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 68.094 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   7: 5167.276 ops/s
                 ·gc.alloc.rate:               787.927 MB/sec
                 ·gc.alloc.rate.norm:          186516.349 B/op
                 ·gc.churn.G1_Eden_Space:      874.025 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 206897.245 B/op
                 ·gc.churn.G1_Old_Gen:         ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.029 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     6.000 ms

Iteration   8: 5121.934 ops/s
                 ·gc.alloc.rate:               780.305 MB/sec
                 ·gc.alloc.rate.norm:          186411.285 B/op
                 ·gc.churn.G1_Eden_Space:      876.597 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 209414.963 B/op
                 ·gc.churn.G1_Old_Gen:         0.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    0.659 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     5.000 ms

Iteration   9: 3474.224 ops/s
                 ·gc.alloc.rate:               529.110 MB/sec
                 ·gc.alloc.rate.norm:          186587.058 B/op
                 ·gc.churn.G1_Eden_Space:      582.454 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 205398.420 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration  10: 5084.855 ops/s
                 ·gc.alloc.rate:               773.371 MB/sec
                 ·gc.alloc.rate.norm:          186398.136 B/op
                 ·gc.churn.G1_Eden_Space:      582.696 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 140441.640 B/op
                 ·gc.churn.G1_Old_Gen:         0.010 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    2.484 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms


# Run progress: 98.89% complete, ETA 00:00:44
# Fork: 2 of 2
# Warmup Iteration   1: 1304.848 ops/s
# Warmup Iteration   2: 3917.951 ops/s
# Warmup Iteration   3: 4925.150 ops/s
# Warmup Iteration   4: 5053.124 ops/s
# Warmup Iteration   5: 5082.978 ops/s
Iteration   1: 5046.330 ops/s
                 ·gc.alloc.rate:               768.438 MB/sec
                 ·gc.alloc.rate.norm:          186476.133 B/op
                 ·gc.churn.G1_Eden_Space:      865.739 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 210088.138 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     39.000 ms

Iteration   2: 5104.263 ops/s
                 ·gc.alloc.rate:               778.634 MB/sec
                 ·gc.alloc.rate.norm:          186715.815 B/op
                 ·gc.churn.G1_Eden_Space:      867.642 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 208060.022 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     38.000 ms

Iteration   3: 5125.168 ops/s
                 ·gc.alloc.rate:               778.980 MB/sec
                 ·gc.alloc.rate.norm:          186376.033 B/op
                 ·gc.churn.G1_Eden_Space:      576.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 137834.595 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     27.000 ms

Iteration   4: 5084.659 ops/s
                 ·gc.alloc.rate:                   773.224 MB/sec
                 ·gc.alloc.rate.norm:              186588.639 B/op
                 ·gc.churn.G1_Eden_Space:          866.725 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     209151.597 B/op
                 ·gc.churn.G1_Survivor_Space:      0.285 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 68.732 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         40.000 ms

Iteration   5: 5099.499 ops/s
                 ·gc.alloc.rate:                   778.245 MB/sec
                 ·gc.alloc.rate.norm:              186814.729 B/op
                 ·gc.churn.G1_Eden_Space:          869.545 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     208731.007 B/op
                 ·gc.churn.G1_Survivor_Space:      2.278 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 546.774 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         23.000 ms

Iteration   6: 2350.017 ops/s
                 ·gc.alloc.rate:                   358.450 MB/sec
                 ·gc.alloc.rate.norm:              186966.644 B/op
                 ·gc.churn.G1_Eden_Space:          288.357 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     150406.270 B/op
                 ·gc.churn.G1_Survivor_Space:      0.282 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 147.169 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   7: 1564.334 ops/s
                 ·gc.alloc.rate:               240.206 MB/sec
                 ·gc.alloc.rate.norm:          186423.168 B/op
                 ·gc.churn.G1_Eden_Space:      276.544 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 214624.499 B/op
                 ·gc.churn.G1_Old_Gen:         0.046 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    35.595 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     24.000 ms

Iteration   8: 2148.785 ops/s
                 ·gc.alloc.rate:               327.816 MB/sec
                 ·gc.alloc.rate.norm:          186837.609 B/op
                 ·gc.churn.G1_Eden_Space:      291.888 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 166360.615 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     12.000 ms

Iteration   9: 3885.524 ops/s
                 ·gc.alloc.rate:               591.078 MB/sec
                 ·gc.alloc.rate.norm:          186388.528 B/op
                 ·gc.churn.G1_Eden_Space:      583.589 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 184026.977 B/op
                 ·gc.churn.G1_Old_Gen:         0.024 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    7.554 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration  10: 4357.566 ops/s
                 ·gc.alloc.rate:               664.125 MB/sec
                 ·gc.alloc.rate.norm:          186489.107 B/op
                 ·gc.churn.G1_Eden_Space:      584.198 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 164045.458 B/op
                 ·gc.churn.G1_Old_Gen:         0.018 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:    4.957 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     5.000 ms



Result "bench.VectorAccumulateBench.recursiveAcc":
  4463.839 ±(99.9%) 1003.327 ops/s [Average]
  (min, avg, max) = (1564.334, 4463.839, 5167.276), stdev = 1155.433
  CI (99.9%): [3460.512, 5467.166] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate":
  680.014 ±(99.9%) 152.528 MB/sec [Average]
  (min, avg, max) = (240.206, 680.014, 787.927), stdev = 175.651
  CI (99.9%): [527.486, 832.542] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm":
  186617.165 ±(99.9%) 215.222 B/op [Average]
  (min, avg, max) = (186376.033, 186617.165, 187338.907), stdev = 247.850
  CI (99.9%): [186401.943, 186832.387] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space":
  680.635 ±(99.9%) 188.018 MB/sec [Average]
  (min, avg, max) = (276.544, 680.635, 876.597), stdev = 216.522
  CI (99.9%): [492.617, 868.653] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm":
  186290.872 ±(99.9%) 26177.171 B/op [Average]
  (min, avg, max) = (137834.595, 186290.872, 214624.499), stdev = 30145.669
  CI (99.9%): [160113.701, 212468.044] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen":
  0.006 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.006, 0.046), stdev = 0.012
  CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm":
  2.782 ±(99.9%) 6.957 B/op [Average]
  (min, avg, max) = (≈ 0, 2.782, 35.595), stdev = 8.012
  CI (99.9%): [≈ 0, 9.739] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space":
  0.284 ±(99.9%) 0.600 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.284, 2.278), stdev = 0.691
  CI (99.9%): [≈ 0, 0.884] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm":
  72.270 ±(99.9%) 144.901 B/op [Average]
  (min, avg, max) = (≈ 0, 72.270, 546.774), stdev = 166.868
  CI (99.9%): [≈ 0, 217.171] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.count":
  47.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 2.350, 3.000), stdev = 0.745
  CI (99.9%): [47.000, 47.000] (assumes normal distribution)

Secondary result "bench.VectorAccumulateBench.recursiveAcc:·gc.time":
  402.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 20.100, 40.000), stdev = 15.145
  CI (99.9%): [402.000, 402.000] (assumes normal distribution)


# Run complete. Total time: 01:06:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                            (size)   Mode  Cnt          Score         Error   Units
ArrayAccumulateBench.foldLeftAcc                                         10  thrpt   20  126703193.384 ± 2302582.479   ops/s
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate                          10  thrpt   20          0.001 ±       0.003  MB/sec
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                     10  thrpt   20         ≈ 10⁻⁵                  B/op
ArrayAccumulateBench.foldLeftAcc:·gc.count                               10  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.foldLeftAcc                                        100  thrpt   20   19432848.944 ±   45693.073   ops/s
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate                         100  thrpt   20          0.010 ±       0.040  MB/sec
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                    100  thrpt   20          0.001 ±       0.003    B/op
ArrayAccumulateBench.foldLeftAcc:·gc.count                              100  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.foldLeftAcc                                        500  thrpt   20    4885116.940 ±   17168.094   ops/s
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate                         500  thrpt   20          0.196 ±       0.761  MB/sec
ArrayAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                    500  thrpt   20          0.049 ±       0.192    B/op
ArrayAccumulateBench.foldLeftAcc:·gc.count                              500  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.foreachAcc                                          10  thrpt   20  127324487.973 ±  548242.937   ops/s
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate                           10  thrpt   20          0.397 ±       1.445  MB/sec
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm                      10  thrpt   20          0.004 ±       0.014    B/op
ArrayAccumulateBench.foreachAcc:·gc.count                                10  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.foreachAcc                                         100  thrpt   20   19426406.826 ±   49740.144   ops/s
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate                          100  thrpt   20          0.208 ±       0.807  MB/sec
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm                     100  thrpt   20          0.013 ±       0.051    B/op
ArrayAccumulateBench.foreachAcc:·gc.count                               100  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.foreachAcc                                         500  thrpt   20    4843048.272 ±   48955.961   ops/s
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate                          500  thrpt   20          0.366 ±       1.175  MB/sec
ArrayAccumulateBench.foreachAcc:·gc.alloc.rate.norm                     500  thrpt   20          0.095 ±       0.304    B/op
ArrayAccumulateBench.foreachAcc:·gc.count                               500  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.recursiveAcc                                        10  thrpt   20   80364399.420 ±  497876.843   ops/s
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate                         10  thrpt   20          0.145 ±       0.319  MB/sec
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                    10  thrpt   20          0.002 ±       0.005    B/op
ArrayAccumulateBench.recursiveAcc:·gc.count                              10  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.recursiveAcc                                       100  thrpt   20    9748568.011 ±   15434.286   ops/s
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate                        100  thrpt   20         ≈ 10⁻⁴                MB/sec
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                   100  thrpt   20         ≈ 10⁻⁵                  B/op
ArrayAccumulateBench.recursiveAcc:·gc.count                             100  thrpt   20            ≈ 0                counts
ArrayAccumulateBench.recursiveAcc                                       500  thrpt   20    2134099.944 ±    4458.293   ops/s
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate                        500  thrpt   20          0.031 ±       0.076  MB/sec
ArrayAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                   500  thrpt   20          0.018 ±       0.044    B/op
ArrayAccumulateBench.recursiveAcc:·gc.count                             500  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foldLeftAcc                                      10  thrpt   20  106897465.757 ±  525312.367   ops/s
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate                       10  thrpt   20          0.384 ±       0.893  MB/sec
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                  10  thrpt   20          0.004 ±       0.010    B/op
IteratorAccumulateBench.foldLeftAcc:·gc.count                            10  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foldLeftAcc                                     100  thrpt   20   35985572.531 ±  146115.601   ops/s
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate                      100  thrpt   20          0.398 ±       1.274  MB/sec
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                 100  thrpt   20          0.014 ±       0.044    B/op
IteratorAccumulateBench.foldLeftAcc:·gc.count                           100  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foldLeftAcc                                     500  thrpt   20    6685856.846 ±   10753.623   ops/s
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate                      500  thrpt   20          0.331 ±       1.005  MB/sec
IteratorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                 500  thrpt   20          0.061 ±       0.185    B/op
IteratorAccumulateBench.foldLeftAcc:·gc.count                           500  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foreachAcc                                       10  thrpt   20  105524346.925 ±  352158.738   ops/s
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate                        10  thrpt   20          0.058 ±       0.131  MB/sec
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                   10  thrpt   20          0.001 ±       0.002    B/op
IteratorAccumulateBench.foreachAcc:·gc.count                             10  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foreachAcc                                      100  thrpt   20   35575961.975 ±  216315.266   ops/s
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate                       100  thrpt   20          0.842 ±       2.735  MB/sec
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                  100  thrpt   20          0.030 ±       0.096    B/op
IteratorAccumulateBench.foreachAcc:·gc.count                            100  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.foreachAcc                                      500  thrpt   20    6616346.044 ±   14683.562   ops/s
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate                       500  thrpt   20          0.615 ±       1.625  MB/sec
IteratorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                  500  thrpt   20          0.114 ±       0.302    B/op
IteratorAccumulateBench.foreachAcc:·gc.count                            500  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.recursiveAcc                                     10  thrpt   20  113371064.495 ±  329579.881   ops/s
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate                      10  thrpt   20          0.188 ±       0.431  MB/sec
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                 10  thrpt   20          0.002 ±       0.005    B/op
IteratorAccumulateBench.recursiveAcc:·gc.count                           10  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.recursiveAcc                                    100  thrpt   20   36052157.747 ±  127038.050   ops/s
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate                     100  thrpt   20          0.815 ±       1.659  MB/sec
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                100  thrpt   20          0.028 ±       0.057    B/op
IteratorAccumulateBench.recursiveAcc:·gc.count                          100  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.recursiveAcc                                    500  thrpt   20    6627572.079 ±   19190.430   ops/s
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate                     500  thrpt   20          1.486 ±       3.174  MB/sec
IteratorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                500  thrpt   20          0.276 ±       0.592    B/op
IteratorAccumulateBench.recursiveAcc:·gc.count                          500  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.whileAcc                                         10  thrpt   20   92683395.034 ±  743397.681   ops/s
IteratorAccumulateBench.whileAcc:·gc.alloc.rate                          10  thrpt   20          0.179 ±       0.695  MB/sec
IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm                     10  thrpt   20          0.002 ±       0.009    B/op
IteratorAccumulateBench.whileAcc:·gc.count                               10  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.whileAcc                                        100  thrpt   20   36060783.509 ±  216679.470   ops/s
IteratorAccumulateBench.whileAcc:·gc.alloc.rate                         100  thrpt   20          0.577 ±       1.664  MB/sec
IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm                    100  thrpt   20          0.020 ±       0.058    B/op
IteratorAccumulateBench.whileAcc:·gc.count                              100  thrpt   20            ≈ 0                counts
IteratorAccumulateBench.whileAcc                                        500  thrpt   20    6623347.325 ±   23092.545   ops/s
IteratorAccumulateBench.whileAcc:·gc.alloc.rate                         500  thrpt   20          0.624 ±       1.340  MB/sec
IteratorAccumulateBench.whileAcc:·gc.alloc.rate.norm                    500  thrpt   20          0.116 ±       0.248    B/op
IteratorAccumulateBench.whileAcc:·gc.count                              500  thrpt   20            ≈ 0                counts
ListAccumulateBench.foldLeftAcc                                          10  thrpt   20   39149008.292 ±  152197.007   ops/s
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate                           10  thrpt   20          0.249 ±       0.488  MB/sec
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                      10  thrpt   20          0.008 ±       0.015    B/op
ListAccumulateBench.foldLeftAcc:·gc.count                                10  thrpt   20            ≈ 0                counts
ListAccumulateBench.foldLeftAcc                                         100  thrpt   20    3584249.279 ±    7641.448   ops/s
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate                          100  thrpt   20          0.351 ±       1.054  MB/sec
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                     100  thrpt   20          0.121 ±       0.362    B/op
ListAccumulateBench.foldLeftAcc:·gc.count                               100  thrpt   20            ≈ 0                counts
ListAccumulateBench.foldLeftAcc                                         500  thrpt   20     731678.156 ±    3119.580   ops/s
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate                          500  thrpt   20          0.278 ±       0.748  MB/sec
ListAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                     500  thrpt   20          0.470 ±       1.266    B/op
ListAccumulateBench.foldLeftAcc:·gc.count                               500  thrpt   20            ≈ 0                counts
ListAccumulateBench.foreachAcc                                           10  thrpt   20   35069482.216 ± 2503096.831   ops/s
ListAccumulateBench.foreachAcc:·gc.alloc.rate                            10  thrpt   20          0.421 ±       0.927  MB/sec
ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm                       10  thrpt   20          0.014 ±       0.032    B/op
ListAccumulateBench.foreachAcc:·gc.count                                 10  thrpt   20            ≈ 0                counts
ListAccumulateBench.foreachAcc                                          100  thrpt   20    3577805.147 ±   10335.367   ops/s
ListAccumulateBench.foreachAcc:·gc.alloc.rate                           100  thrpt   20          0.012 ±       0.046  MB/sec
ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm                      100  thrpt   20          0.004 ±       0.016    B/op
ListAccumulateBench.foreachAcc:·gc.count                                100  thrpt   20            ≈ 0                counts
ListAccumulateBench.foreachAcc                                          500  thrpt   20     733408.262 ±    1519.145   ops/s
ListAccumulateBench.foreachAcc:·gc.alloc.rate                           500  thrpt   20          0.270 ±       0.971  MB/sec
ListAccumulateBench.foreachAcc:·gc.alloc.rate.norm                      500  thrpt   20          0.454 ±       1.631    B/op
ListAccumulateBench.foreachAcc:·gc.count                                500  thrpt   20            ≈ 0                counts
ListAccumulateBench.recursiveAcc                                         10  thrpt   20   12733990.083 ±  267430.188   ops/s
ListAccumulateBench.recursiveAcc:·gc.alloc.rate                          10  thrpt   20       3741.854 ±      77.329  MB/sec
ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                     10  thrpt   20        360.189 ±       0.202    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space                 10  thrpt   20       3740.846 ±     124.341  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm            10  thrpt   20        360.076 ±       8.952    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                    10  thrpt   20          0.020 ±       0.017  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm               10  thrpt   20          0.002 ±       0.002    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space             10  thrpt   20          0.071 ±       0.225  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm        10  thrpt   20          0.007 ±       0.021    B/op
ListAccumulateBench.recursiveAcc:·gc.count                               10  thrpt   20        257.000                counts
ListAccumulateBench.recursiveAcc:·gc.time                                10  thrpt   20        423.000                    ms
ListAccumulateBench.recursiveAcc                                        100  thrpt   20    1239082.187 ±    8007.656   ops/s
ListAccumulateBench.recursiveAcc:·gc.alloc.rate                         100  thrpt   20       4006.118 ±      25.697  MB/sec
ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                    100  thrpt   20       3961.542 ±       1.425    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space                100  thrpt   20       3990.146 ±     118.643  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm           100  thrpt   20       3945.509 ±     108.011    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                   100  thrpt   20          0.016 ±       0.020  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm              100  thrpt   20          0.016 ±       0.020    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space            100  thrpt   20          0.028 ±       0.076  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm       100  thrpt   20          0.028 ±       0.075    B/op
ListAccumulateBench.recursiveAcc:·gc.count                              100  thrpt   20        274.000                counts
ListAccumulateBench.recursiveAcc:·gc.time                               100  thrpt   20        421.000                    ms
ListAccumulateBench.recursiveAcc                                        500  thrpt   20     249570.819 ±    4357.295   ops/s
ListAccumulateBench.recursiveAcc:·gc.alloc.rate                         500  thrpt   20       4065.297 ±      70.683  MB/sec
ListAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                    500  thrpt   20      19968.175 ±       6.721    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space                500  thrpt   20       4077.388 ±     143.557  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm           500  thrpt   20      20024.926 ±     539.846    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                   500  thrpt   20          0.017 ±       0.019  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm              500  thrpt   20          0.082 ±       0.096    B/op
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space            500  thrpt   20          0.028 ±       0.076  MB/sec
ListAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm       500  thrpt   20          0.145 ±       0.388    B/op
ListAccumulateBench.recursiveAcc:·gc.count                              500  thrpt   20        280.000                counts
ListAccumulateBench.recursiveAcc:·gc.time                               500  thrpt   20        448.000                    ms
SetAccumulateBench.foldLeftAcc                                           10  thrpt   20   33104025.118 ±  419643.008   ops/s
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate                            10  thrpt   20       3243.090 ±      39.848  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                       10  thrpt   20        120.083 ±       0.076    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space                   10  thrpt   20       3246.086 ±      92.346  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm              10  thrpt   20        120.206 ±       3.417    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Old_Gen                      10  thrpt   20          0.030 ±       0.041  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Old_Gen.norm                 10  thrpt   20          0.001 ±       0.002    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space               10  thrpt   20          0.256 ±       0.685  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm          10  thrpt   20          0.010 ±       0.026    B/op
SetAccumulateBench.foldLeftAcc:·gc.count                                 10  thrpt   20        223.000                counts
SetAccumulateBench.foldLeftAcc:·gc.time                                  10  thrpt   20        422.000                    ms
SetAccumulateBench.foldLeftAcc                                          100  thrpt   20    1586188.979 ±   10915.400   ops/s
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate                           100  thrpt   20        228.219 ±       1.459  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                      100  thrpt   20        176.306 ±       0.416    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space                  100  thrpt   20        230.856 ±     102.837  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm             100  thrpt   20        178.681 ±      79.607    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space              100  thrpt   20          0.043 ±       0.091  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm         100  thrpt   20          0.033 ±       0.070    B/op
SetAccumulateBench.foldLeftAcc:·gc.count                                100  thrpt   20         16.000                counts
SetAccumulateBench.foldLeftAcc:·gc.time                                 100  thrpt   20        214.000                    ms
SetAccumulateBench.foldLeftAcc                                          500  thrpt   20     327818.714 ±   11804.970   ops/s
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate                           500  thrpt   20         47.248 ±       1.570  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                      500  thrpt   20        176.672 ±       1.448    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space                  500  thrpt   20         57.735 ±     102.875  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm             500  thrpt   20        216.518 ±     386.111    B/op
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space              500  thrpt   20          0.014 ±       0.055  MB/sec
SetAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm         500  thrpt   20          0.052 ±       0.203    B/op
SetAccumulateBench.foldLeftAcc:·gc.count                                500  thrpt   20          4.000                counts
SetAccumulateBench.foldLeftAcc:·gc.time                                 500  thrpt   20         58.000                    ms
SetAccumulateBench.foreachAcc                                            10  thrpt   20   64591280.513 ±  207068.996   ops/s
SetAccumulateBench.foreachAcc:·gc.alloc.rate                             10  thrpt   20          0.063 ±       0.145  MB/sec
SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm                        10  thrpt   20          0.001 ±       0.003    B/op
SetAccumulateBench.foreachAcc:·gc.count                                  10  thrpt   20            ≈ 0                counts
SetAccumulateBench.foreachAcc                                           100  thrpt   20    3133379.317 ±   17896.184   ops/s
SetAccumulateBench.foreachAcc:·gc.alloc.rate                            100  thrpt   20         82.346 ±       0.818  MB/sec
SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm                       100  thrpt   20         32.210 ±       0.389    B/op
SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space                   100  thrpt   20         86.558 ±     117.796  MB/sec
SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm              100  thrpt   20         34.064 ±      46.358    B/op
SetAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space               100  thrpt   20          0.028 ±       0.076  MB/sec
SetAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space.norm          100  thrpt   20          0.011 ±       0.030    B/op
SetAccumulateBench.foreachAcc:·gc.count                                 100  thrpt   20          6.000                counts
SetAccumulateBench.foreachAcc:·gc.time                                  100  thrpt   20         85.000                    ms
SetAccumulateBench.foreachAcc                                           500  thrpt   20     701235.132 ±   80740.248   ops/s
SetAccumulateBench.foreachAcc:·gc.alloc.rate                            500  thrpt   20         18.433 ±       2.120  MB/sec
SetAccumulateBench.foreachAcc:·gc.alloc.rate.norm                       500  thrpt   20         32.215 ±       0.423    B/op
SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space                   500  thrpt   20         14.449 ±      56.110  MB/sec
SetAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm              500  thrpt   20         22.371 ±      86.875    B/op
SetAccumulateBench.foreachAcc:·gc.count                                 500  thrpt   20          1.000                counts
SetAccumulateBench.foreachAcc:·gc.time                                  500  thrpt   20         16.000                    ms
VectorAccumulateBench.foldLeftAcc                                        10  thrpt   20   50298823.348 ±  100728.856   ops/s
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate                         10  thrpt   20          0.202 ±       0.608  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                    10  thrpt   20          0.005 ±       0.015    B/op
VectorAccumulateBench.foldLeftAcc:·gc.count                              10  thrpt   20            ≈ 0                counts
VectorAccumulateBench.foldLeftAcc                                       100  thrpt   20    4238968.213 ±   20542.658   ops/s
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate                        100  thrpt   20        222.284 ±       1.237  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                   100  thrpt   20         64.247 ±       0.569    B/op
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space               100  thrpt   20        201.922 ±     117.769  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm          100  thrpt   20         58.432 ±      34.082    B/op
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space           100  thrpt   20          0.043 ±       0.091  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Survivor_Space.norm      100  thrpt   20          0.012 ±       0.026    B/op
VectorAccumulateBench.foldLeftAcc:·gc.count                             100  thrpt   20         14.000                counts
VectorAccumulateBench.foldLeftAcc:·gc.time                              100  thrpt   20        187.000                    ms
VectorAccumulateBench.foldLeftAcc                                       500  thrpt   20     867600.290 ±    4330.691   ops/s
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate                        500  thrpt   20         45.370 ±       0.272  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.alloc.rate.norm                   500  thrpt   20         64.078 ±       0.202    B/op
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space               500  thrpt   20         28.960 ±      77.404  MB/sec
VectorAccumulateBench.foldLeftAcc:·gc.churn.G1_Eden_Space.norm          500  thrpt   20         41.290 ±     110.365    B/op
VectorAccumulateBench.foldLeftAcc:·gc.count                             500  thrpt   20          2.000                counts
VectorAccumulateBench.foldLeftAcc:·gc.time                              500  thrpt   20         32.000                    ms
VectorAccumulateBench.foreachAcc                                         10  thrpt   20   50581081.517 ±  276697.493   ops/s
VectorAccumulateBench.foreachAcc:·gc.alloc.rate                          10  thrpt   20          0.226 ±       0.796  MB/sec
VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                     10  thrpt   20          0.006 ±       0.019    B/op
VectorAccumulateBench.foreachAcc:·gc.count                               10  thrpt   20            ≈ 0                counts
VectorAccumulateBench.foreachAcc                                        100  thrpt   20    4240461.461 ±   20174.275   ops/s
VectorAccumulateBench.foreachAcc:·gc.alloc.rate                         100  thrpt   20        222.290 ±       0.778  MB/sec
VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                    100  thrpt   20         64.239 ±       0.384    B/op
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space                100  thrpt   20        201.977 ±     117.802  MB/sec
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm           100  thrpt   20         58.470 ±      34.103    B/op
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space            100  thrpt   20          0.057 ±       0.129  MB/sec
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Survivor_Space.norm       100  thrpt   20          0.017 ±       0.038    B/op
VectorAccumulateBench.foreachAcc:·gc.count                              100  thrpt   20         14.000                counts
VectorAccumulateBench.foreachAcc:·gc.time                               100  thrpt   20        182.000                    ms
VectorAccumulateBench.foreachAcc                                        500  thrpt   20     866936.627 ±    4056.510   ops/s
VectorAccumulateBench.foreachAcc:·gc.alloc.rate                         500  thrpt   20         45.562 ±       0.876  MB/sec
VectorAccumulateBench.foreachAcc:·gc.alloc.rate.norm                    500  thrpt   20         64.393 ±       1.231    B/op
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space                500  thrpt   20         28.947 ±      77.368  MB/sec
VectorAccumulateBench.foreachAcc:·gc.churn.G1_Eden_Space.norm           500  thrpt   20         41.037 ±     109.681    B/op
VectorAccumulateBench.foreachAcc:·gc.count                              500  thrpt   20          2.000                counts
VectorAccumulateBench.foreachAcc:·gc.time                               500  thrpt   20         30.000                    ms
VectorAccumulateBench.recursiveAcc                                       10  thrpt   20     456017.767 ±    3344.476   ops/s
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate                        10  thrpt   20        730.064 ±       4.665  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                   10  thrpt   20       1962.144 ±       3.714    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space               10  thrpt   20        724.455 ±     128.577  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm          10  thrpt   20       1948.466 ±     351.610    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                  10  thrpt   20          0.003 ±       0.005  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm             10  thrpt   20          0.009 ±       0.013    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space           10  thrpt   20          0.356 ±       0.588  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm      10  thrpt   20          0.960 ±       1.592    B/op
VectorAccumulateBench.recursiveAcc:·gc.count                             10  thrpt   20         50.000                counts
VectorAccumulateBench.recursiveAcc:·gc.time                              10  thrpt   20        378.000                    ms
VectorAccumulateBench.recursiveAcc                                      100  thrpt   20      27903.349 ±     128.088   ops/s
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate                       100  thrpt   20        760.636 ±       3.582  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                  100  thrpt   20      33388.865 ±      52.270    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space              100  thrpt   20        754.043 ±     126.030  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm         100  thrpt   20      33114.875 ±    5597.959    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                 100  thrpt   20          0.005 ±       0.007  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm            100  thrpt   20          0.200 ±       0.298    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space          100  thrpt   20          0.299 ±       0.598  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm     100  thrpt   20         13.163 ±      26.310    B/op
VectorAccumulateBench.recursiveAcc:·gc.count                            100  thrpt   20         52.000                counts
VectorAccumulateBench.recursiveAcc:·gc.time                             100  thrpt   20        388.000                    ms
VectorAccumulateBench.recursiveAcc                                      500  thrpt   20       4463.839 ±    1003.327   ops/s
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate                       500  thrpt   20        680.014 ±     152.528  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.alloc.rate.norm                  500  thrpt   20     186617.165 ±     215.222    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space              500  thrpt   20        680.635 ±     188.018  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Eden_Space.norm         500  thrpt   20     186290.872 ±   26177.171    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen                 500  thrpt   20          0.006 ±       0.010  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Old_Gen.norm            500  thrpt   20          2.782 ±       6.957    B/op
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space          500  thrpt   20          0.284 ±       0.600  MB/sec
VectorAccumulateBench.recursiveAcc:·gc.churn.G1_Survivor_Space.norm     500  thrpt   20         72.270 ±     144.901    B/op
VectorAccumulateBench.recursiveAcc:·gc.count                            500  thrpt   20         47.000                counts
VectorAccumulateBench.recursiveAcc:·gc.time                             500  thrpt   20        402.000                    ms

Benchmark result is saved to jmh-result/2.13.0-M5-graalvm-rc9-jdk11.json
